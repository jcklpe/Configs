[VarDef,gHashCID,1][VarDef,gEnableTrialVersion,0][VarDef,gEnableTrialCode,0][VarDef,gEnableInternalP,1][VarDef,gTestCodeP,1][VarDef,gDebug,0][VarDef,gZBrushVersion,[ZBrushInfo,0]][VarDef,gIsMacOS,[ZBrushInfo,6]][VarDef,gPDate,""][RoutineDef,UnixifyPath,[VarSet,resultStr,""][VarSet,len,0][VarSet,n,[StrLength,inOutPath]][Loop,n,[If,[StrToAsc,inOutPath,i]==92,[VarSet,resultStr,[StrMerge,resultStr,"/"]],[VarSet,resultStr,[StrMerge,resultStr,[StrExtract,inOutPath,i,i]]]],i][VarSet,inOutPath,resultStr],inOutPath][RoutineDef,StrCmp,[VarSet,resultVal,0][Loop,256,[VarSet,v1,[StrToAsc,str1,i]][VarSet,v2,[StrToAsc,str2,i]][If,v1<v2,[VarSet,resultVal,-1][LoopExit]][If,v1>v2,[VarSet,resultVal,1][LoopExit]][If,v1==0,[LoopExit]],i],resultVal,str1,str2][RoutineDef,PrintDebug,[If,(gDebug==1),[Note,debugStr]],debugStr][RoutineDef,TocTocToc,[VarSet,gid,"GZMOFXPSLGYT"][If,([StrLength,str]!=12),[VarSet,str,gid],[VarSet,oldStr,str][VarSet,str,""][Loop,12,[VarSet,car,[StrToAsc,[StrExtract,oldStr,i,i]]][If,(car<65)||(car>90),[VarSet,str,gid][LoopExit]][If,gHashCID,[VarAdd,car,i+3][If,(car>90),[VarSub,car,26]]][VarSet,str,[StrMerge,str,[StrFromAsc,car]]],i]],str][VarDef,gComputerId,[StrUpper,[FtpString,0]]][RoutineCall,TocTocToc,gComputerId][VarDef,gCurrentCompactDate,""][VarDef,gDateValue,0][VarDef,gYear,0][VarDef,gMonth,0][VarDef,gDay,0][VarDef,gHour,0][VarDef,gMinute,0][VarDef,gSecond,0][MVarDef,gDateArray,7][RoutineDef,CompactDate,[VarSet,gDateValue,0][VarSet,gYear,0][VarSet,gMonth,0][VarSet,gDay,0][VarSet,gHour,0][VarSet,gMinute,0][VarSet,gSecond,0][VarSet,n,[StrLength,expandedDate]][Loop,4,[VarSet,gYear,(gYear*10)+([StrToAsc,expandedDate,i]-48)],i][Loop,2,[VarSet,gMonth,(gMonth*10)+([StrToAsc,expandedDate,5+i]-48)],i][Loop,2,[VarSet,gDay,(gDay*10)+([StrToAsc,expandedDate,8+i]-48)],i][If,(n>=13),[Loop,2,[VarSet,gHour,(gHour*10)+([StrToAsc,expandedDate,11+i]-48)],i]][If,(n>=16),[Loop,2,[VarSet,gMinute,(gMinute*10)+([StrToAsc,expandedDate,14+i]-48)],i]][If,(n>=19),[Loop,2,[VarSet,gSecond,(gSecond*10)+([StrToAsc,expandedDate,17+i]-48)],i]][MVarSet,gDateArray,0,(1*gSecond)+(8*gMinute)+(12*gHour)+(2*gDay)+(10*gMonth)+(16*(gYear-2000))][MVarSet,gDateArray,1,(2*gMinute)+(8*gHour)+(21*gDay)+(3*gMonth)+(14*(gYear-2000))][MVarSet,gDateArray,2,(5*gHour)+(23*gDay)+(10*gMonth)+(17*(gYear-2000))][MVarSet,gDateArray,3,(4*gDay)+(22*gMonth)+(8*(gYear-2000))][MVarSet,gDateArray,4,(5*gMonth)+(18*(gYear-2000))][MVarSet,gDateArray,5,(2*(gYear-2000))][MVarSet,gDateArray,6,0][Loop,6,[VarSet,tmpVal,INT([MVarGet,gDateArray,i]/26)][MVarSet,gDateArray,i,[MVarGet,gDateArray,i]-(26*tmpVal)][MVarSet,gDateArray,i+1,[MVarGet,gDateArray,i+1]+tmpVal],i][VarSet,tmp,""][Loop,7,[VarSet,tmp,[StrMerge,[StrFromAsc,'A'+[MVarGet,gDateArray,i]],tmp]],i][VarSet,compactedDate,tmp],compactedDate,expandedDate][RoutineDef,AddCompactDate,[VarSet,expandedDate,""][RoutineCall,ExpandDate,expandedDate,compactedDate][VarSet,gDateValue,0][VarSet,gYear,0][VarSet,gMonth,0][VarSet,gDay,0][VarSet,gHour,0][VarSet,gMinute,0][VarSet,gSecond,0][VarSet,n,[StrLength,expandedDate]][Loop,4,[VarSet,gYear,(gYear*10)+([StrToAsc,expandedDate,i]-48)],i][Loop,2,[VarSet,gMonth,(gMonth*10)+([StrToAsc,expandedDate,5+i]-48)],i][Loop,2,[VarSet,gDay,(gDay*10)+([StrToAsc,expandedDate,8+i]-48)],i][If,(n>=13),[Loop,2,[VarSet,gHour,(gHour*10)+([StrToAsc,expandedDate,11+i]-48)],i]][If,(n>=16),[Loop,2,[VarSet,gMinute,(gMinute*10)+([StrToAsc,expandedDate,14+i]-48)],i]][If,(n>=19),[Loop,2,[VarSet,gSecond,(gSecond*10)+([StrToAsc,expandedDate,17+i]-48)],i]][VarAdd,gSecond,second][If,gSecond>=60,[VarSub,gSecond,60][VarAdd,gMinute,1]][VarAdd,gMinute,minute][If,gMinute>=60,[VarSub,gMinute,60][VarAdd,gHour,1]][VarAdd,gHour,hour][If,gHour>=24,[VarSub,gHour,24][VarAdd,gDay,1]][VarAdd,gDay,day][If,gDay>31,[VarSub,gDay,31][VarAdd,gMonth,1]][VarAdd,gMonth,month][If,gMonth>12,[VarSub,gMonth,12][VarAdd,gYear,1]][VarAdd,gYear,year][MVarSet,gDateArray,0,(1*gSecond)+(8*gMinute)+(12*gHour)+(2*gDay)+(10*gMonth)+(16*(gYear-2000))][MVarSet,gDateArray,1,(2*gMinute)+(8*gHour)+(21*gDay)+(3*gMonth)+(14*(gYear-2000))][MVarSet,gDateArray,2,(5*gHour)+(23*gDay)+(10*gMonth)+(17*(gYear-2000))][MVarSet,gDateArray,3,(4*gDay)+(22*gMonth)+(8*(gYear-2000))][MVarSet,gDateArray,4,(5*gMonth)+(18*(gYear-2000))][MVarSet,gDateArray,5,(2*(gYear-2000))][MVarSet,gDateArray,6,0][Loop,6,[VarSet,tmpVal,INT([MVarGet,gDateArray,i]/26)][MVarSet,gDateArray,i,[MVarGet,gDateArray,i]-(26*tmpVal)][MVarSet,gDateArray,i+1,[MVarGet,gDateArray,i+1]+tmpVal],i][VarSet,tmp,""][Loop,7,[VarSet,tmp,[StrMerge,[StrFromAsc,'A'+[MVarGet,gDateArray,i]],tmp]],i][VarSet,compactedDate,tmp],compactedDate,year,month,day,hour,minute,second][RoutineDef,ExpandDate,[Loop,7,[MVarSet,gDateArray,i,[StrToAsc,compactedDate,i]-'A'],i][VarSet,gSecond,(1*[MVarGet,gDateArray,6])+(26*[MVarGet,gDateArray,5])+(16*[MVarGet,gDateArray,4])+(56*[MVarGet,gDateArray,3])+(16*[MVarGet,gDateArray,2])+(56*[MVarGet,gDateArray,1])+(16*[MVarGet,gDateArray,0])][VarSet,gMinute,(11*[MVarGet,gDateArray,4])+(52*[MVarGet,gDateArray,3])+(56*[MVarGet,gDateArray,2])+(22*[MVarGet,gDateArray,1])+(56*[MVarGet,gDateArray,0])][VarSet,gHour,(4*[MVarGet,gDateArray,3])+(6*[MVarGet,gDateArray,2])+(12*[MVarGet,gDateArray,1])+(9*[MVarGet,gDateArray,0])][VarSet,gDay,(5*[MVarGet,gDateArray,2])+(13*[MVarGet,gDateArray,1])+(10*[MVarGet,gDateArray,0])][VarSet,gMonth,(4*[MVarGet,gDateArray,1])+(7*[MVarGet,gDateArray,0])][VarSet,gYear,2000+(9*[MVarGet,gDateArray,0])][VarAdd,gMinute,INT(gSecond/60)][VarSub,gSecond,60*INT(gSecond/60)][VarAdd,gHour,INT(gMinute/60)][VarSub,gMinute,60*INT(gMinute/60)][VarAdd,gDay,INT(gHour/24)][VarSub,gHour,24*INT(gHour/24)][VarAdd,gMonth,INT(gDay/31)][VarSub,gDay,31*INT(gDay/31)][VarAdd,gYear,INT(gMonth/12)][VarSub,gMonth,12*INT(gMonth/12)][VarSet,tmp,""][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,48+(gSecond-(10*INT(gSecond/10)))],tmp]][VarSet,gSecond,INT(gSecond/10)],i][VarSet,tmp,[StrMerge,"-",tmp]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,48+(gMinute-(10*INT(gMinute/10)))],tmp]][VarSet,gMinute,INT(gMinute/10)],i][VarSet,tmp,[StrMerge,"-",tmp]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,48+(gHour-(10*INT(gHour/10)))],tmp]][VarSet,gHour,INT(gHour/10)],i][VarSet,tmp,[StrMerge,"-",tmp]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,48+(gDay-(10*INT(gDay/10)))],tmp]][VarSet,gDay,INT(gDay/10)],i][VarSet,tmp,[StrMerge,"-",tmp]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,48+(gMonth-(10*INT(gMonth/10)))],tmp]][VarSet,gMonth,INT(gMonth/10)],i][VarSet,tmp,[StrMerge,"-",tmp]][Loop,4,[VarSet,tmp,[StrMerge,[StrFromAsc,48+(gYear-(10*INT(gYear/10)))],tmp]][VarSet,gYear,INT(gYear/10)],i][VarSet,expandedDate,tmp],expandedDate,compactedDate][RoutineDef,CompareCompactDates,[VarSet,cmpResult,0][Loop,7,[VarSet,v1,[StrToAsc,date1,i]][VarSet,v2,[StrToAsc,date2,i]][If,(v1<v2),[VarSet,cmpResult,-1][LoopExit],[If,(v1>v2),[VarSet,cmpResult,1][LoopExit]]],i],cmpResult,date1,date2][RoutineDef,TestTimeRange,[VarSet,tmp,""][VarSet,tmpVal,0][Loop,1,[RoutineCall,CompareCompactDates,tmpVal,ldate,cdate][If,(tmpVal>0),[VarSet,resultVal,0][LoopExit]][RoutineCall,CompareCompactDates,tmpVal,ldate,sdate][If,(tmpVal>0),[Loop,7,[MVarSet,gDateArray,i,[StrToAsc,ldate,i]-[StrToAsc,sdate,i]],i],[Loop,7,[MVarSet,gDateArray,i,[StrToAsc,sdate,i]-[StrToAsc,ldate,i]],i]][Loop,6,[Loop,100000,[If,([MVarGet,gDateArray,6-i]<0),[MVarSet,gDateArray,6-i,([MVarGet,gDateArray,6-i]+26)][MVarSet,gDateArray,5-i,([MVarGet,gDateArray,5-i]-1)],[LoopExit]]],i][If,([MVarGet,gDateArray,2]>=2)||([MVarGet,gDateArray,1]>0)||([MVarGet,gDateArray,0]>0),[VarSet,resultVal,0][LoopExit]][VarSet,resultVal,1][LoopExit]],resultVal,ldate,sdate,cdate][RoutineDef,TestTimeOrder,[VarSet,tmp,""][VarSet,tmpVal,0][Loop,1,[RoutineCall,CompareCompactDates,tmpVal,idate,ldate][If,(tmpVal>0),[VarSet,resultVal,0][LoopExit]][RoutineCall,CompareCompactDates,tmpVal,ldate,cdate][If,(tmpVal>0),[VarSet,resultVal,0][LoopExit]][RoutineCall,CompareCompactDates,tmpVal,ldate,sdate][If,(tmpVal>0),[Loop,7,[MVarSet,gDateArray,i,[StrToAsc,ldate,i]-[StrToAsc,sdate,i]],i],[Loop,7,[MVarSet,gDateArray,i,[StrToAsc,sdate,i]-[StrToAsc,ldate,i]],i]][Loop,6,[Loop,100000,[If,([MVarGet,gDateArray,6-i]<0),[MVarSet,gDateArray,6-i,([MVarGet,gDateArray,6-i]+26)][MVarSet,gDateArray,5-i,([MVarGet,gDateArray,5-i]-1)],[LoopExit]]],i][If,([MVarGet,gDateArray,2]>=2)||([MVarGet,gDateArray,1]>0)||([MVarGet,gDateArray,0]>0),[VarSet,resultVal,0][LoopExit]][VarSet,resultVal,1][LoopExit]],resultVal,idate,ldate,sdate,cdate][RoutineDef,GetCurrentDate,[VarSet,gCurrentCompactDate,""][VarSet,tmp,""][VarSet,tmpVal,0][VarSet,tmpVal,[ZBrushInfo,14]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,'0'+(tmpVal-(10*INT(tmpVal/10)))],tmp]][VarSet,tmpVal,tmpVal/10]][VarSet,tmp,[StrMerge,"-",tmp]][VarSet,tmpVal,[ZBrushInfo,13]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,'0'+(tmpVal-(10*INT(tmpVal/10)))],tmp]][VarSet,tmpVal,tmpVal/10]][VarSet,tmp,[StrMerge,"-",tmp]][VarSet,tmpVal,[ZBrushInfo,12]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,'0'+(tmpVal-(10*INT(tmpVal/10)))],tmp]][VarSet,tmpVal,tmpVal/10]][VarSet,tmp,[StrMerge,"-",tmp]][VarSet,tmpVal,[ZBrushInfo,11]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,'0'+(tmpVal-(10*INT(tmpVal/10)))],tmp]][VarSet,tmpVal,tmpVal/10]][VarSet,tmp,[StrMerge,"-",tmp]][VarSet,tmpVal,[ZBrushInfo,10]][Loop,2,[VarSet,tmp,[StrMerge,[StrFromAsc,'0'+(tmpVal-(10*INT(tmpVal/10)))],tmp]][VarSet,tmpVal,tmpVal/10]][VarSet,tmp,[StrMerge,"-",tmp]][VarSet,tmpVal,[ZBrushInfo,9]][Loop,4,[VarSet,tmp,[StrMerge,[StrFromAsc,'0'+(tmpVal-(10*INT(tmpVal/10)))],tmp]][VarSet,tmpVal,tmpVal/10]][RoutineCall,CompactDate,gCurrentCompactDate,tmp]][RoutineCall,GetCurrentDate][VarDef,gNumNotEncrypted,4][MVarDef,gZBrushCode,6][RoutineDef,BuildZBrushCode,[MVarSet,gZBrushCode,0,25][MVarSet,gZBrushCode,1,1][MVarSet,gZBrushCode,2,17][MVarSet,gZBrushCode,3,20][MVarSet,gZBrushCode,4,18][MVarSet,gZBrushCode,5,7][If,[MemGetSize,gSplashMemStrings]==0,[MemCreate,gSplashMemStrings,1024,0][MemWriteString,gSplashMemStrings,"AMLDBGOJODSOJHURBQPOJCVGHNQPHCGPOIGPOSYCS",0][MemWriteString,gSplashMemStrings,"PJQIOSKGJUCBIHJGIFODYNFIUSYVBDCGFZEOIYNV",256][MemWriteString,gSplashMemStrings,"HIRVJIYHGBYNVVIBUIVYNGVOIERYBCOZIYVGCOI",512][MemWriteString,gSplashMemStrings,"SXDOERYVGFIDOIYVGFDOSDUYNVGCOYGNVCOUYBVD",768]]][RoutineCall,BuildZBrushCode][MVarDef,gAsciiToIndex,256][MVarDef,gIndexToAscii,26][RoutineDef,BuildAsciiArrays,[Loop,256,[MVarSet,gAsciiToIndex,i,-1],i][Loop,26,[MVarSet,gIndexToAscii,i,65+i][MVarSet,gAsciiToIndex,65+i,i][MVarSet,gAsciiToIndex,97+i,i],i]][RoutineCall,BuildAsciiArrays][MVarDef,gEncryptXSAArray,5*44][MVarDef,gEncryptRArray,44*5*44][MVarDef,gEncryptIRArray,44*5*44][RoutineDef,BuildEncryptArrays,[Loop,5*44,[MVarSet,gEncryptXSAArray,i,0],i][Loop,44*5*44,[MVarSet,gEncryptRArray,i,i-(44*INT(i/44))],i][MVarSet,gEncryptXSAArray,0,18][MVarSet,gEncryptXSAArray,1,35][MVarSet,gEncryptXSAArray,2,10][MVarSet,gEncryptXSAArray,3,5][MVarSet,gEncryptXSAArray,4,3][MVarSet,gEncryptXSAArray,5,24][MVarSet,gEncryptXSAArray,6,17][MVarSet,gEncryptXSAArray,7,37][MVarSet,gEncryptXSAArray,8,33][MVarSet,gEncryptXSAArray,9,16][MVarSet,gEncryptXSAArray,10,25][MVarSet,gEncryptXSAArray,11,13][MVarSet,gEncryptXSAArray,12,26][MVarSet,gEncryptXSAArray,13,41][MVarSet,gEncryptXSAArray,14,30][MVarSet,gEncryptXSAArray,15,42][MVarSet,gEncryptXSAArray,16,12][MVarSet,gEncryptXSAArray,17,4][MVarSet,gEncryptXSAArray,18,11][MVarSet,gEncryptXSAArray,19,32][MVarSet,gEncryptXSAArray,20,6][MVarSet,gEncryptXSAArray,21,27][MVarSet,gEncryptXSAArray,22,38][MVarSet,gEncryptXSAArray,23,7][MVarSet,gEncryptXSAArray,24,23][MVarSet,gEncryptXSAArray,25,1][MVarSet,gEncryptXSAArray,26,40][MVarSet,gEncryptXSAArray,27,20][MVarSet,gEncryptXSAArray,28,31][MVarSet,gEncryptXSAArray,29,9][MVarSet,gEncryptXSAArray,30,36][MVarSet,gEncryptXSAArray,31,21][MVarSet,gEncryptXSAArray,32,14][MVarSet,gEncryptXSAArray,33,0][MVarSet,gEncryptXSAArray,34,39][MVarSet,gEncryptXSAArray,35,22][MVarSet,gEncryptXSAArray,36,43][MVarSet,gEncryptXSAArray,37,8][MVarSet,gEncryptXSAArray,38,28][MVarSet,gEncryptXSAArray,39,2][MVarSet,gEncryptXSAArray,40,19][MVarSet,gEncryptXSAArray,41,34][MVarSet,gEncryptXSAArray,42,15][MVarSet,gEncryptXSAArray,43,29][MVarSet,gEncryptRArray,43*5*44,18][MVarSet,gEncryptRArray,(43*5*44)+1,35][MVarSet,gEncryptRArray,(43*5*44)+2,10][MVarSet,gEncryptRArray,(43*5*44)+3,5][MVarSet,gEncryptRArray,(43*5*44)+4,3][MVarSet,gEncryptRArray,(43*5*44)+5,24][MVarSet,gEncryptRArray,(43*5*44)+6,17][MVarSet,gEncryptRArray,(43*5*44)+7,37][MVarSet,gEncryptRArray,(43*5*44)+8,33][MVarSet,gEncryptRArray,(43*5*44)+9,16][MVarSet,gEncryptRArray,(43*5*44)+10,25][MVarSet,gEncryptRArray,(43*5*44)+11,13][MVarSet,gEncryptRArray,(43*5*44)+12,26][MVarSet,gEncryptRArray,(43*5*44)+13,41][MVarSet,gEncryptRArray,(43*5*44)+14,30][MVarSet,gEncryptRArray,(43*5*44)+15,42][MVarSet,gEncryptRArray,(43*5*44)+16,12][MVarSet,gEncryptRArray,(43*5*44)+17,4][MVarSet,gEncryptRArray,(43*5*44)+18,11][MVarSet,gEncryptRArray,(43*5*44)+19,32][MVarSet,gEncryptRArray,(43*5*44)+20,6][MVarSet,gEncryptRArray,(43*5*44)+21,27][MVarSet,gEncryptRArray,(43*5*44)+22,38][MVarSet,gEncryptRArray,(43*5*44)+23,7][MVarSet,gEncryptRArray,(43*5*44)+24,23][MVarSet,gEncryptRArray,(43*5*44)+25,1][MVarSet,gEncryptRArray,(43*5*44)+26,40][MVarSet,gEncryptRArray,(43*5*44)+27,20][MVarSet,gEncryptRArray,(43*5*44)+28,31][MVarSet,gEncryptRArray,(43*5*44)+29,9][MVarSet,gEncryptRArray,(43*5*44)+30,36][MVarSet,gEncryptRArray,(43*5*44)+31,21][MVarSet,gEncryptRArray,(43*5*44)+32,14][MVarSet,gEncryptRArray,(43*5*44)+33,0][MVarSet,gEncryptRArray,(43*5*44)+34,39][MVarSet,gEncryptRArray,(43*5*44)+35,22][MVarSet,gEncryptRArray,(43*5*44)+36,43][MVarSet,gEncryptRArray,(43*5*44)+37,8][MVarSet,gEncryptRArray,(43*5*44)+38,28][MVarSet,gEncryptRArray,(43*5*44)+39,2][MVarSet,gEncryptRArray,(43*5*44)+40,19][MVarSet,gEncryptRArray,(43*5*44)+41,34][MVarSet,gEncryptRArray,(43*5*44)+42,15][MVarSet,gEncryptRArray,(43*5*44)+43,29][Loop,44,[MVarSet,gEncryptXSAArray,44+i,[MVarGet,gEncryptXSAArray,(i+7)-(44*INT((i+7)/44))]][MVarSet,gEncryptXSAArray,(2*44)+i,[MVarGet,gEncryptXSAArray,(i+31)-(44*INT((i+31)/44))]][MVarSet,gEncryptXSAArray,(3*44)+i,[MVarGet,gEncryptXSAArray,(43-i)-(44*INT((43-i)/44))]][MVarSet,gEncryptXSAArray,(4*44)+i,[MVarGet,gEncryptXSAArray,(57-i)-(44*INT((57-i)/44))]],i][Loop,43,[VarSet,in,43*5*44][VarSet,out,k*5*44][VarSet,n,k][VarSet,j,0][Loop,44,[VarSet,index,[MVarGet,gEncryptRArray,in+i]][If,(index<n),[MVarSet,gEncryptRArray,out+j,index][VarInc,j]],i],k][Loop,44,[VarSet,start,k*5*44][VarSet,n,k][Loop,n,[MVarSet,gEncryptRArray,start+44+i,[MVarGet,gEncryptRArray,start+((7+i)-(n*INT((7+i)/n)))]][MVarSet,gEncryptRArray,start+(2*44)+i,[MVarGet,gEncryptRArray,start+((17+i)-(n*INT((17+i)/n)))]][MVarSet,gEncryptRArray,start+(3*44)+i,[MVarGet,gEncryptRArray,start+((55-i)-(n*INT((55-i)/n)))]][MVarSet,gEncryptRArray,start+(4*44)+i,[MVarGet,gEncryptRArray,start+((68-i)-(n*INT((68-i)/n)))]],i],k][Loop,44*5,[VarSet,start,i*44][Loop,44,[MVarSet,gEncryptIRArray,start+[MVarGet,gEncryptRArray,start+j],j],j],i]][RoutineCall,BuildEncryptArrays][VarDef,gTestCryptOp,3][VarDef,gEncryptStr,""][VarDef,gDecryptStr,""][MVarDef,gCryptResult,7][MVarDef,gStartXSAIndex,5][MVarDef,gStartRIndex,5][RoutineDef,EncryptStringByCode,[VarSet,gEncryptStr,[StrMerge,gEncryptStr,[StrFromAsc,'A'+encryptCode]]][VarSet,encryptOp,INT(encryptCode/5)][VarSet,encryptIndex,encryptCode-(5*INT(encryptCode/5))][VarSet,n,[StrLength,stringToEncrypt]][VarSet,startRArray,(n-1)*5*44][Loop,5,[VarSet,tmp1,INT((encryptIndex+i)/5)][VarSet,tmp2,44*((encryptIndex+i)-(5*tmp1))][MVarSet,gStartXSAIndex,i,tmp2][MVarSet,gStartRIndex,i,startRArray+[MVarGet,gStartXSAIndex,i]],i][VarSet,resultStr,""][MVarSet,gCryptResult,5,0][MVarSet,gCryptResult,6,0][Loop,n,[VarSet,tmpVal,i+[MVarGet,gStartRIndex,0]][VarSet,RValue0,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartRIndex,0]][VarSet,tmpVal,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,2]][VarSet,RValue1,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartRIndex,0]][VarSet,tmpVal,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,3]][VarSet,tmpVal,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,1]][VarSet,RValue2,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartRIndex,0]][VarSet,tmpVal,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,4]][VarSet,tmpVal,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,2]][VarSet,tmpVal,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,3]][VarSet,RValue3,[MVarGet,gEncryptRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartXSAIndex,0]][VarSet,XSAValue,[MVarGet,gEncryptXSAArray,tmpVal]][VarSet,tmpVal,[StrToAsc,stringToEncrypt,RValue0]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][MVarSet,gCryptResult,0,tmpVal][VarSet,tmpVal,[StrToAsc,stringToEncrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,XSAValue+26-tmpVal][MVarSet,gCryptResult,1,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[StrToAsc,stringToEncrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,tmpVal+(52-XSAValue)][MVarSet,gCryptResult,2,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[StrToAsc,stringToEncrypt,RValue1]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][MVarSet,gCryptResult,3,tmpVal][VarSet,tmpVal,[StrToAsc,stringToEncrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,tmpVal+XSAValue][MVarSet,gCryptResult,4,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[StrToAsc,stringToEncrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal2,i-(6*INT(i/6))][VarSet,tmpVal2,[MVarGet,gZBrushCode,tmpVal2]][VarSet,tmpVal,tmpVal+tmpVal2][MVarSet,gCryptResult,5,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[MVarGet,gCryptResult,encryptOp]][VarSet,tmpVal,[MVarGet,gIndexToAscii,tmpVal]][VarSet,resultStr,[StrMerge,resultStr,[StrFromAsc,tmpVal]]],i][VarSet,outputString,resultStr],outputString,stringToEncrypt,encryptCode][RoutineDef,DecryptStringByCode,[VarSet,gDecryptStr,[StrMerge,gDecryptStr,[StrFromAsc,'A'+encryptCode]]][VarSet,encryptOp,INT(encryptCode/5)][VarSet,encryptIndex,encryptCode-(5*INT(encryptCode/5))][VarSet,n,[StrLength,stringToDecrypt]][VarSet,startRArray,(n-1)*5*44][Loop,5,[MVarSet,gStartXSAIndex,i,((encryptIndex+i)-(5*INT((encryptIndex+i)/5)))*44][MVarSet,gStartRIndex,i,startRArray+[MVarGet,gStartXSAIndex,i]],i][VarSet,resultStr,""][MVarSet,gCryptResult,5,0][MVarSet,gCryptResult,6,0][Loop,n,[VarSet,tmpVal,i+[MVarGet,gStartRIndex,0]][VarSet,RValue0,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartRIndex,2]][VarSet,tmpVal,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,0]][VarSet,RValue1,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartRIndex,1]][VarSet,tmpVal,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,3]][VarSet,tmpVal,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,0]][VarSet,RValue2,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartRIndex,3]][VarSet,tmpVal,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,2]][VarSet,tmpVal,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,4]][VarSet,tmpVal,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,tmpVal+[MVarGet,gStartRIndex,0]][VarSet,RValue3,[MVarGet,gEncryptIRArray,tmpVal]][VarSet,tmpVal,i+[MVarGet,gStartXSAIndex,0]][VarSet,XSAValue,[MVarGet,gEncryptXSAArray,tmpVal]][VarSet,tmpVal,[StrToAsc,stringToDecrypt,RValue0]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][MVarSet,gCryptResult,0,tmpVal][VarSet,tmpVal,[StrToAsc,stringToDecrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,XSAValue+26-tmpVal][MVarSet,gCryptResult,1,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[StrToAsc,stringToDecrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,tmpVal+XSAValue][MVarSet,gCryptResult,2,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[StrToAsc,stringToDecrypt,RValue1]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][MVarSet,gCryptResult,3,tmpVal][VarSet,tmpVal,[StrToAsc,stringToDecrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,tmpVal+(52-XSAValue)][MVarSet,gCryptResult,4,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[StrToAsc,stringToDecrypt,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][VarSet,tmpVal,tmpVal+26-[MVarGet,gZBrushCode,i-(6*INT(i/6))]][MVarSet,gCryptResult,5,tmpVal-(26*INT(tmpVal/26))][VarSet,tmpVal,[MVarGet,gCryptResult,encryptOp]][VarSet,tmpVal,[MVarGet,gIndexToAscii,tmpVal]][VarSet,resultStr,[StrMerge,resultStr,[StrFromAsc,tmpVal]]],i][VarSet,outputString,resultStr],outputString,stringToDecrypt,encryptCode][RoutineDef,EncryptStringByString,[VarSet,tmp,inStr][VarSet,n,[StrLength,cryptStr]][VarSet,code,0][Loop,n,[VarSet,code,[StrToAsc,cryptStr,i]][If,code<0,[VarSet,code,256+code]][If,(code>=48)&&(code<=57),[VarSet,code,2600+(code-48)+cryptMove+(cryptShift*i)][VarSet,code,code-(26*INT(code/26))][RoutineCall,EncryptStringByCode,tmp,tmp,code]][If,(code>=65)&&(code<=90),[VarSet,code,2600+(code-65)+cryptMove+(cryptShift*i)][VarSet,code,code-(26*INT(code/26))][RoutineCall,EncryptStringByCode,tmp,tmp,code]],i][VarSet,outStr,tmp],outStr,inStr,cryptStr,cryptMove,cryptShift][RoutineDef,DecryptStringByString,[VarSet,tmp,inStr][VarSet,n,[StrLength,cryptStr]][VarSet,code,0][VarSet,j,0][Loop,n,[VarSet,j,(n-1)-i][VarSet,code,[StrToAsc,cryptStr,j]][If,code<0,[VarSet,code,256+code]][If,(code>=48)&&(code<=57),[VarSet,code,2600+(code-48)+cryptMove+(cryptShift*j)][VarSet,code,code-(26*INT(code/26))][RoutineCall,DecryptStringByCode,tmp,tmp,code]][If,(code>=65)&&(code<=90),[VarSet,code,2600+(code-65)+cryptMove+(cryptShift*j)][VarSet,code,code-(26*INT(code/26))][RoutineCall,DecryptStringByCode,tmp,tmp,code]],i][VarSet,outStr,tmp],outStr,inStr,cryptStr,cryptMove,cryptShift][RoutineDef,SelfEncryptString,[VarSet,n,[StrLength,inStr]][VarSet,cryptStr,[StrExtract,inStr,0,(n-1)-gNumNotEncrypted]][VarSet,tmp,[StrExtract,inStr,n-gNumNotEncrypted,n-1]][Loop,n-gNumNotEncrypted,[VarSet,code,[StrToAsc,cryptStr,(n-1)-(gNumNotEncrypted+i)]][If,code<0,[VarSet,code,256+code]][VarSet,code,[MVarGet,gAsciiToIndex,code]][RoutineCall,EncryptStringByCode,tmp,tmp,code][VarSet,tmp,[StrMerge,[StrFromAsc,[MVarGet,gIndexToAscii,code]],tmp]],i][VarSet,outStr,tmp],outStr,inStr][RoutineDef,SelfDecryptString,[VarSet,n,[StrLength,inStr]][VarSet,cryptStr,inStr][VarSet,tmp,""][Loop,n-gNumNotEncrypted,[VarSet,code,[StrToAsc,cryptStr]][If,code<0,[VarSet,code,256+code]][VarSet,code,[MVarGet,gAsciiToIndex,code]][VarSet,cryptStr,[StrExtract,cryptStr,1,[StrLength,cryptStr]-1]][RoutineCall,DecryptStringByCode,cryptStr,cryptStr,code][VarSet,tmp,[StrMerge,tmp,[StrFromAsc,[MVarGet,gIndexToAscii,code]]]]][VarSet,outStr,[StrMerge,tmp,cryptStr]],outStr,inStr][RoutineDef,Encrypt,[VarSet,encryptCode,0][VarSet,output,inputString][VarSet,n,[StrLength,expireDate]][Loop,n,[VarSet,encryptCode,[StrToAsc,expireDate,i]-48][If,encryptCode<0,[VarSet,encryptCode,256+encryptCode]][If,((encryptCode>=0)&&(encryptCode<=9)),[RoutineCall,EncryptStringByCode,output,output,encryptCode+i]],i][VarSet,n,[StrLength,inputString]][VarSet,codeStr,[StrExtract,output,0,n-(gNumNotEncrypted+1)]][VarSet,output,[StrExtract,output,n-gNumNotEncrypted,n-1]][Loop,n-gNumNotEncrypted,[VarSet,encryptCode,[StrToAsc,codeStr,n-(i+gNumNotEncrypted+1)]][If,encryptCode<0,[VarSet,encryptCode,256+encryptCode]][VarSet,encryptCode,[MVarGet,gAsciiToIndex,encryptCode]][RoutineCall,EncryptStringByCode,output,output,encryptCode][VarSet,output,[StrMerge,[StrFromAsc,[MVarGet,gIndexToAscii,encryptCode]],output]],i][VarSet,n,[StrLength,expireDate]][Loop,n,[VarSet,encryptCode,[StrToAsc,expireDate,i]-48][If,encryptCode<0,[VarSet,encryptCode,256+encryptCode]][If,((encryptCode>=0)&&(encryptCode<=9)),[RoutineCall,EncryptStringByCode,output,output,encryptCode+16-i]],i][VarSet,outputString,output],outputString,inputString,expireDate][RoutineDef,Decrypt,[VarSet,encryptCode,0][VarSet,codeStr,""][VarSet,output,inputString][VarSet,n,[StrLength,expireDate]][Loop,n,[VarSet,encryptCode,[StrToAsc,expireDate,n-(i+1)]-48][If,encryptCode<0,[VarSet,encryptCode,256+encryptCode]][If,((encryptCode>=0)&&(encryptCode<=9)),[RoutineCall,DecryptStringByCode,output,output,encryptCode+16+i-(n-1)]],i][VarSet,n,[StrLength,inputString]][Loop,n-gNumNotEncrypted,[VarSet,encryptCode,[StrToAsc,output]][If,encryptCode<0,[VarSet,encryptCode,256+encryptCode]][VarSet,encryptCode,[MVarGet,gAsciiToIndex,encryptCode]][VarSet,output,[StrExtract,output,1,[StrLength,output]-1]][RoutineCall,DecryptStringByCode,output,output,encryptCode][VarSet,codeStr,[StrMerge,codeStr,[StrFromAsc,[MVarGet,gIndexToAscii,encryptCode]]]]][VarSet,output,[StrMerge,codeStr,output]][VarSet,n,[StrLength,expireDate]][Loop,n,[VarSet,encryptCode,[StrToAsc,expireDate,(n-1)-i]-48][If,encryptCode<0,[VarSet,encryptCode,256+encryptCode]][If,((encryptCode>=0)&&(encryptCode<=9)),[RoutineCall,DecryptStringByCode,output,output,encryptCode+n-(i+1)]],i][VarSet,outputString,output],outputString,inputString,expireDate][VarDef,gDebugGetCoreCode,0][RoutineDef,GetCoreCode,[VarSet,output,""][VarSet,n,[StrLength,inputString]][Loop,n,[VarSet,tmpVal,[StrToAsc,inputString,i]][If,tmpVal<0,[VarSet,tmpVal,256+tmpVal]][VarSet,tmpVal,[MVarGet,gAsciiToIndex,tmpVal]][If,(tmpVal!=-1),[VarSet,output,[StrMerge,output,[StrExtract,inputString,i,i]]]],i][VarSet,outputString,output],outputString,inputString][VarDef,gDebugGetOptCode,0][RoutineDef,GetOptCode,[VarSet,output,""][VarSet,n,[StrLength,inputString]][VarSet,car,0][Loop,n,[VarSet,car,[StrToAsc,inputString,i]][If,car<0,[VarSet,car,256+car]][If,((car>='0')&&(car<='9'))||((car=='-')&&([StrLength,output]>0)),[VarSet,output,[StrMerge,output,[StrExtract,inputString,i,1]]]],i][If,[StrLength,output]>0,[VarSet,outputString,[StrMerge,"-",output]],[VarSet,outputString,""]],outputString,inputString][RoutineDef,MakePrintable,[VarSet,output,""][VarSet,coreCode,""][VarSet,optCode,""][RoutineCall,GetCoreCode,coreCode,inputString][RoutineCall,GetOptCode,optCode,inputString][VarSet,n,[StrLength,coreCode]][Loop,n,[If,((i>0)&&(i==(4*INT(i/4)))),[VarSet,output,[StrMerge,output,"-"]]][VarSet,output,[StrMerge,output,[StrExtract,coreCode,i,i]]],i][VarSet,outputString,[StrMerge,output,optCode]],outputString,inputString][VarDef,gDebugMakeCryptable,0][RoutineDef,MakeCryptable,[VarSet,coreCode,""][VarSet,optCode,""][RoutineCall,GetCoreCode,coreCode,inputString][RoutineCall,GetOptCode,optCode,inputString][VarSet,outputString,[StrMerge,coreCode,optCode]],outputString,inputString][VarDef,gLicenseAlreadyInitialized,1][If,[MemGetSize,gLicenseCodes]==0,[MemCreate,gLicenseCodes,4096,0][VarSet,gLicenseAlreadyInitialized,0]][If,[MemGetSize,gUserCode]==0,[MemCreate,gUserCode,16,0][MemWriteString,gUserCode,"DEUC",0]][VarDef,gCodeRequest,0][VarDef,gCodeActivation,1][VarDef,gCodeDeactivation,2][VarDef,gCodeInstall1,3][VarDef,gCodeInstall2,4][VarDef,gCodePublic,5][VarDef,gCodePrivate,6][VarDef,gCodeInternal1,7][VarDef,gCodeInternal2,8][VarDef,gCodeInternal3,9][VarDef,gCodeInternalP,10][VarDef,gCodeTest,-1][VarDef,gNumCodes,11][VarDef,gCodePartName,0][VarDef,gCodePartFormat,1][VarDef,gCodePartCryptedCode,2][VarDef,gCodePartLState,3][VarDef,gCodePartCId,4][VarDef,gCodePartIDate,5][VarDef,gCodePartLDate,6][VarDef,gCodePartSDate,7][VarDef,gCodePartLType,8][VarDef,gCodePartVersion,9][VarDef,gCodePartZBRU,10][VarDef,gCodePartPDate,11][VarDef,gCodePartOptExpireDate,12][VarDef,gCodePartOptNumLicense,13][VarDef,gNumCodeParts,gCodePartOptNumLicense+1][VarDef,gCodePartStartOpt,gCodePartOptExpireDate][VarDef,gOneCodeSize,0][MVarDef,gCodePartIndex,gNumCodeParts][MVarDef,gCodePartSize,gNumCodeParts][RoutineDef,DefineCodeParts,[MVarSet,gCodePartSize,gCodePartName,30][MVarSet,gCodePartSize,gCodePartFormat,10][MVarSet,gCodePartSize,gCodePartCryptedCode,62][MVarSet,gCodePartSize,gCodePartLState,1][MVarSet,gCodePartSize,gCodePartCId,12][MVarSet,gCodePartSize,gCodePartIDate,7][MVarSet,gCodePartSize,gCodePartLDate,7][MVarSet,gCodePartSize,gCodePartSDate,7][MVarSet,gCodePartSize,gCodePartLType,1][MVarSet,gCodePartSize,gCodePartVersion,4][MVarSet,gCodePartSize,gCodePartZBRU,4][MVarSet,gCodePartSize,gCodePartPDate,7][MVarSet,gCodePartSize,gCodePartOptExpireDate,10][MVarSet,gCodePartSize,gCodePartOptNumLicense,6][MVarSet,gCodePartIndex,gCodePartName,0][MVarSet,gCodePartIndex,gCodePartFormat,[MVarGet,gCodePartIndex,gCodePartFormat-1]+[MVarGet,gCodePartSize,gCodePartFormat-1]+1][MVarSet,gCodePartIndex,gCodePartCryptedCode,[MVarGet,gCodePartIndex,gCodePartCryptedCode-1]+[MVarGet,gCodePartSize,gCodePartCryptedCode-1]+1][MVarSet,gCodePartIndex,gCodePartLState,[MVarGet,gCodePartIndex,gCodePartLState-1]+[MVarGet,gCodePartSize,gCodePartLState-1]+1][MVarSet,gCodePartIndex,gCodePartCId,[MVarGet,gCodePartIndex,gCodePartCId-1]+[MVarGet,gCodePartSize,gCodePartCId-1]+1][MVarSet,gCodePartIndex,gCodePartIDate,[MVarGet,gCodePartIndex,gCodePartIDate-1]+[MVarGet,gCodePartSize,gCodePartIDate-1]+1][MVarSet,gCodePartIndex,gCodePartLDate,[MVarGet,gCodePartIndex,gCodePartLDate-1]+[MVarGet,gCodePartSize,gCodePartLDate-1]+1][MVarSet,gCodePartIndex,gCodePartSDate,[MVarGet,gCodePartIndex,gCodePartSDate-1]+[MVarGet,gCodePartSize,gCodePartSDate-1]+1][MVarSet,gCodePartIndex,gCodePartLType,[MVarGet,gCodePartIndex,gCodePartLType-1]+[MVarGet,gCodePartSize,gCodePartLType-1]+1][MVarSet,gCodePartIndex,gCodePartVersion,[MVarGet,gCodePartIndex,gCodePartVersion-1]+[MVarGet,gCodePartSize,gCodePartVersion-1]+1][MVarSet,gCodePartIndex,gCodePartZBRU,[MVarGet,gCodePartIndex,gCodePartZBRU-1]+[MVarGet,gCodePartSize,gCodePartZBRU-1]+1][MVarSet,gCodePartIndex,gCodePartPDate,[MVarGet,gCodePartIndex,gCodePartPDate-1]+[MVarGet,gCodePartSize,gCodePartPDate-1]+1][MVarSet,gCodePartIndex,gCodePartOptExpireDate,[MVarGet,gCodePartIndex,gCodePartOptExpireDate-1]+[MVarGet,gCodePartSize,gCodePartOptExpireDate-1]+1][MVarSet,gCodePartIndex,gCodePartOptNumLicense,[MVarGet,gCodePartIndex,gCodePartOptNumLicense-1]+[MVarGet,gCodePartSize,gCodePartOptNumLicense-1]+1][VarSet,gOneCodeSize,[MVarGet,gCodePartIndex,gNumCodeParts-1]+[MVarGet,gCodePartSize,gNumCodeParts-1]+1][MemDelete,gDefaultCodeParts][MemCreate,gDefaultCodeParts,gNumCodeParts*256][MemWriteString,gDefaultCodeParts,"",gCodePartName*256][MemWriteString,gDefaultCodeParts,"",gCodePartFormat*256][MemWriteString,gDefaultCodeParts,"",gCodePartCryptedCode*256][MemWriteString,gDefaultCodeParts,"F",gCodePartLState*256][MemWriteString,gDefaultCodeParts,"AADEFAULTCID",gCodePartCId*256][MemWriteString,gDefaultCodeParts,"AAADEID",gCodePartIDate*256][MemWriteString,gDefaultCodeParts,"AAADELD",gCodePartLDate*256][MemWriteString,gDefaultCodeParts,"AAADESD",gCodePartSDate*256][MemWriteString,gDefaultCodeParts,"P",gCodePartLType*256][MemWriteString,gDefaultCodeParts,"DEZV",gCodePartVersion*256][MemWriteString,gDefaultCodeParts,"ZBRU",gCodePartZBRU*256][MemWriteString,gDefaultCodeParts,"AAADEPD",gCodePartPDate*256][MemWriteString,gDefaultCodeParts,"",gCodePartOptExpireDate*256][MemWriteString,gDefaultCodeParts,"",gCodePartOptNumLicense*256]][RoutineCall,DefineCodeParts][RoutineDef,DefineLicenseFiles,[MemDelete,gLicenseCodeFiles][MemDelete,gLicenseOriginalFiles][MemCreate,gLicenseCodeFiles,gNumCodes*256][MemCreate,gLicenseOriginalFiles,gNumCodes*256][MemWriteString,gLicenseCodeFiles,"ZBRUSH_ZRequestActivation.zsc",256*gCodeRequest][MemWriteString,gLicenseOriginalFiles,"",256*gCodeRequest][MemWriteString,gLicenseCodeFiles,"ZBRUSH_ZActivation.zsc",256*gCodeActivation][MemWriteString,gLicenseOriginalFiles,"",256*gCodeActivation][MemWriteString,gLicenseCodeFiles,"ZBRUSH_ZDeactivation.zsc",256*gCodeDeactivation][MemWriteString,gLicenseOriginalFiles,"",256*gCodeDeactivation][MemWriteString,gLicenseCodeFiles,"ZDATA_ZPlugs64/ProjectionMasterData/PMSmallIcon.psd",256*gCodeInstall1][MemWriteString,gLicenseOriginalFiles,"ZDATA_ZPlugs64/ProjectionMasterData/PMBigIcon.psd",256*gCodeInstall1][MemWriteString,gLicenseCodeFiles,"ZDATA_ZPlugs64/ZProject.dll",256*gCodeInternal3][MemWriteString,gLicenseOriginalFiles,"",256*gCodeInternal3][MemWriteString,gLicenseCodeFiles,"ZDATA_AABHPCMFLHAGDWBYWX.ZLC",256*gCodePublic][MemWriteString,gLicenseOriginalFiles,"",256*gCodePublic][MemWriteString,gLicenseCodeFiles,"ZDATA_AABHPCMFLHAGDWBYWX.ZLC",256*gCodePrivate][MemWriteString,gLicenseOriginalFiles,"",256*gCodePrivate][MemWriteString,gLicenseCodeFiles,"ZDATA_AutoNotes/images/zscript-replay.psd",256*gCodeInternal2][MemWriteString,gLicenseOriginalFiles,"ZDATA_AutoNotes/images/zscript-play.psd",256*gCodeInternal2][MemWriteString,gLicenseCodeFiles,"ZDATA_ZLogo.psd",256*gCodeInstall2][MemWriteString,gLicenseOriginalFiles,"",256*gCodeInstall2][If,gTestCodeP,[MemWriteString,gLicenseCodeFiles,"ZDATA_AutoNotes/images/zscript-playback.psd",256*gCodeInternalP][MemWriteString,gLicenseOriginalFiles,"ZDATA_AutoNotes/images/zscript-play.psd",256*gCodeInternalP]][If,gIsMacOS,[MemWriteString,gLicenseCodeFiles,"ZBRUSH_.u3fs97z1f.dat",256*gCodeInternal1][MemWriteString,gLicenseOriginalFiles,"ZDATA_ZPlugs64/SplashData/SplashRes.dat",256*gCodeInternal1],[MemWriteString,gLicenseCodeFiles,"ZBRUSH_ZStartup/ConfigFiles/soc5424fgdi.dat",256*gCodeInternal1][MemWriteString,gLicenseOriginalFiles,"ZDATA_ZPlugs64/SplashData/SplashRes.dat",256*gCodeInternal1]][MemDelete,gPZLFile][MemCreate,gPZLFile,256][If,gIsMacOS,[MemWriteString,gPZLFile,"ZBRUSH_.mem000544213.dat",0],[MemWriteString,gPZLFile,"ZBRUSH_ZStartup/ConfigFiles/mem000544213.dat",0]]][RoutineCall,DefineLicenseFiles][RoutineDef,GetCodeFile,[MemReadString,gLicenseCodeFiles,fileName,256*codeIndex],codeIndex,fileName][RoutineDef,GetDefaultCodePart,[MemReadString,gDefaultCodeParts,codePartStr,codePartIndex*256],codePartIndex,codePartStr][RoutineDef,ClearCodePart,[VarSet,codeStart,codeIndex*gOneCodeSize][MemCopy,gDefaultCodeParts,codePartIndex*256,gLicenseCodes,codeStart+[MVarGet,gCodePartIndex,codePartIndex],[MVarGet,gCodePartSize,codePartIndex]],codeIndex,codePartIndex][RoutineDef,GetCodePart,[VarSet,codeStart,codeIndex*gOneCodeSize][MemReadString,gLicenseCodes,codePartStr,codeStart+[MVarGet,gCodePartIndex,codePartIndex],0,0,[MVarGet,gCodePartSize,codePartIndex]],codeIndex,codePartIndex,codePartStr][RoutineDef,SetCodePart,[VarSet,codeStart,codeIndex*gOneCodeSize][MemMultiWrite,gLicenseCodes,0,1,codeStart+[MVarGet,gCodePartIndex,codePartIndex],[MVarGet,gCodePartSize,codePartIndex],1][MemWriteString,gLicenseCodes,codePartStr,codeStart+[MVarGet,gCodePartIndex,codePartIndex],0],codeIndex,codePartIndex,codePartStr][RoutineDef,CmpCodePart,[VarSet,codePart,""][VarSet,codeStart,codeIndex*gOneCodeSize][MemReadString,gLicenseCodes,codePart,codeStart+[MVarGet,gCodePartIndex,codePartIndex],0,0,[MVarGet,gCodePartSize,codePartIndex]][RoutineCall,StrCmp,cmpResult,codePart,codePartToCompare],cmpResult,codeIndex,codePartIndex,codePartToCompare][RoutineDef,DisplayCode,[VarSet,cryptedCode,""][VarSet,codeName,""][VarSet,codeFormat,""][VarSet,codeLState,""][VarSet,codeCId,""][VarSet,codeIDate,""][VarSet,codeLDate,""][VarSet,codeSDate,""][VarSet,codePDate,""][VarSet,codeLType,""][VarSet,codeVersion,""][VarSet,codePDate,""][VarSet,codeOptExpireDate,""][VarSet,codeOptNumLicense,""][RoutineCall,GetCodePart,codeIndex,gCodePartCryptedCode,cryptedCode][RoutineCall,GetCodePart,codeIndex,gCodePartName,codeName][RoutineCall,GetCodePart,codeIndex,gCodePartFormat,codeFormat][RoutineCall,GetCodePart,codeIndex,gCodePartLState,codeLState][RoutineCall,GetCodePart,codeIndex,gCodePartCId,codeCId][RoutineCall,GetCodePart,codeIndex,gCodePartIDate,codeIDate][RoutineCall,GetCodePart,codeIndex,gCodePartLDate,codeLDate][RoutineCall,GetCodePart,codeIndex,gCodePartSDate,codeSDate][RoutineCall,GetCodePart,codeIndex,gCodePartLType,codeLType][RoutineCall,GetCodePart,codeIndex,gCodePartVersion,codeVersion][RoutineCall,GetCodePart,codeIndex,gCodePartPDate,codePDate][RoutineCall,GetCodePart,codeIndex,gCodePartOptExpireDate,codeOptExpireDate][RoutineCall,GetCodePart,codeIndex,gCodePartOptNumLicense,codeOptNumLicense][If,gEnableInternalP,[RoutineCall,GetCodePart,codeIndex,gCodePartPDate,codePDate]][NoteIButton,,,0,1,1,1,600,270+(20*gEnableInternalP),,,0,0,0][NoteIButton,[StrMerge,"\Cff9923**** ",cryptedCode," ****"],,0,1,10,10,600,18][NoteIButton,[StrMerge,"\Cff9923Code =   [\Cffffff",codeName,"\Cff9923]"],,0,1,10,30,600,18][NoteIButton,[StrMerge,"\Cff9923Format = [\Cffffff",codeFormat,"\Cff9923]"],,0,1,10,50,600,18][NoteIButton,[StrMerge,"\Cff9923LState = [\Cffffff",codeLState,"\Cff9923]"],,0,1,10,70,600,18][NoteIButton,[StrMerge,"\Cff9923CId =    [\Cffffff",codeCId,"\Cff9923]"],,0,1,10,90,600,18][NoteIButton,[StrMerge,"\Cff9923IDate =  [\Cffffff",codeIDate,"\Cff9923]"],,0,1,10,110,600,18][NoteIButton,[StrMerge,"\Cff9923LDate =  [\Cffffff",codeLDate,"\Cff9923]"],,0,1,10,130,600,18][NoteIButton,[StrMerge,"\Cff9923SDate =  [\Cffffff",codeSDate,"\Cff9923]"],,0,1,10,150,600,18][NoteIButton,[StrMerge,"\Cff9923LType =  [\Cffffff",codeLType,"\Cff9923]"],,0,1,10,170,600,18][If,gEnableInternalP,[NoteIButton,[StrMerge,"\Cff9923Version =  [\Cffffff",codeVersion,"\Cff9923]"],,0,1,10,190,600,18][NoteIButton,[StrMerge,"\Cff9923PDate =  [\Cffffff",codePDate,"\Cff9923]"],,0,1,10,210,600,18]][NoteIButton,[StrMerge,"\Cff9923OptExp = [\Cffffff",codeOptExpireDate,"\Cff9923]"],,0,1,10,190+(40*gEnableInternalP),600,18][NoteIButton,[StrMerge,"\Cff9923OptNum = [\Cffffff",codeOptNumLicense,"\Cff9923]"],,0,1,10,210+(40*gEnableInternalP),600,18][NoteIButton,"\Cff9923OK",,0,0,10,230+(40*gEnableInternalP),600,36][Note,"",,0,,,600,600,270+(40*gEnableInternalP),0],codeIndex][RoutineDef,BashCode,[VarSet,reverseAlgo,0][If,hashStep<0,[VarSet,reverseAlgo,1][VarSet,hashStep,-hashStep]][VarSet,str,"DEFAULT HASHING STRING"][If,hashStep==1,[MemReadString,gSplashMemStrings,str,0]][If,hashStep==2,[MemReadString,gSplashMemStrings,str,256]][If,hashStep==3,[MemReadString,gSplashMemStrings,str,512]][If,hashStep==4,[MemReadString,gSplashMemStrings,str,768]][VarSet,outCode,""][If,reverseAlgo==1,[RoutineCall,DecryptStringByString,outCode,code,str,-1,0],[RoutineCall,EncryptStringByString,outCode,code,str,-1,0]][VarSet,code,outCode],code,hashStep][RoutineDef,HashCode,[VarSet,algo,-1][VarSet,reverseAlgo,0][If,hashStep<0,[VarSet,reverseAlgo,1][VarSet,hashStep,-hashStep]][If,hashStep==1,[VarSet,algo,0]][If,hashStep==2,[VarSet,algo,1]][If,hashStep==3,[VarSet,algo,2]][If,hashStep==4,[VarSet,algo,0]][If,hashStep==5,[VarSet,algo,1]][If,hashStep==6,[VarSet,algo,1]][If,hashStep==7,[VarSet,algo,2]][VarSet,len,[StrLength,code]][VarSet,index,0][VarSet,outCode,""][If,algo==0,[If,reverseAlgo==0,[Loop,len,[VarSet,car,[StrToAsc,[StrUpper,[StrExtract,code,index,index]]]][VarSub,car,45][If,car>25,[VarSub,car,26]][VarAdd,car,65][VarSet,outCode,[StrMerge,outCode,[StrFromAsc,car]]],index],[Loop,len,[VarSet,car,[StrToAsc,[StrUpper,[StrExtract,code,index,index]]]][VarSub,car,59][If,car>25,[VarSub,car,26]][VarAdd,car,65][VarSet,outCode,[StrMerge,outCode,[StrFromAsc,car]]],index]]][If,algo==1,[If,reverseAlgo==0,[VarSet,outCode,[StrMerge,[StrExtract,code,4,len-1],[StrExtract,code,0,3]]],[VarSet,outCode,[StrMerge,[StrExtract,code,len-4,len-1],[StrExtract,code,0,len-5]]]]][If,algo==2,[If,reverseAlgo==0,[VarSet,outCode,[StrMerge,[StrExtract,code,4,5],[StrExtract,code,0,2],[StrExtract,code,6,len-1],[StrExtract,code,3,3]]],[VarSet,outCode,[StrMerge,[StrExtract,code,2,4],[StrExtract,code,len-1,len-1],[StrExtract,code,0,1],[StrExtract,code,5,len-2]]]]][VarSet,code,outCode],code,hashStep][VarDef,gDebugEncryptCode,0][RoutineDef,EncryptCode,[VarSet,codeName,""][VarSet,codeFormat,""][VarSet,codeLState,""][VarSet,codeCId,""][VarSet,codeIDate,""][VarSet,codeLDate,""][VarSet,codeSDate,""][VarSet,codeLType,""][VarSet,codeVersion,""][VarSet,codePDate,""][VarSet,codeOptExpireDate,""][VarSet,codeOptNumLicense,""][RoutineCall,GetCodePart,codeIndex,gCodePartName,codeName][RoutineCall,GetCodePart,codeIndex,gCodePartFormat,codeFormat][RoutineCall,GetCodePart,codeIndex,gCodePartLState,codeLState][RoutineCall,GetCodePart,codeIndex,gCodePartCId,codeCId][RoutineCall,GetCodePart,codeIndex,gCodePartIDate,codeIDate][RoutineCall,GetCodePart,codeIndex,gCodePartLDate,codeLDate][RoutineCall,GetCodePart,codeIndex,gCodePartSDate,codeSDate][RoutineCall,GetCodePart,codeIndex,gCodePartLType,codeLType][RoutineCall,GetCodePart,codeIndex,gCodePartVersion,codeVersion][RoutineCall,GetCodePart,codeIndex,gCodePartPDate,codePDate][RoutineCall,GetCodePart,codeIndex,gCodePartOptExpireDate,codeOptExpireDate][RoutineCall,GetCodePart,codeIndex,gCodePartOptNumLicense,codeOptNumLicense][VarSet,coreCode,""][VarSet,optCode,""][VarSet,i,-1][Loop,[StrLength,codeFormat],[VarInc,i][VarSet,elem,[StrToAsc,codeFormat,i]-'A'][If,(elem==gCodePartLState),[VarSet,coreCode,[StrMerge,coreCode,codeLState]][LoopContinue]][If,(elem==gCodePartCId),[If,(codeIndex==gCodeRequest),[RoutineCall,HashCode,codeCId,2]][VarSet,coreCode,[StrMerge,coreCode,codeCId]][LoopContinue]][If,(elem==gCodePartIDate),[VarSet,coreCode,[StrMerge,coreCode,codeIDate]][LoopContinue]][If,(elem==gCodePartLDate),[VarSet,coreCode,[StrMerge,coreCode,codeLDate]][LoopContinue]][If,(elem==gCodePartSDate),[VarSet,coreCode,[StrMerge,coreCode,codeSDate]][LoopContinue]][If,(elem==gCodePartLType),[VarSet,coreCode,[StrMerge,coreCode,codeLType]][LoopContinue]][If,(elem==gCodePartVersion),[VarSet,coreCode,[StrMerge,coreCode,codeVersion]][LoopContinue]][If,(elem==gCodePartZBRU),[If,(codeIndex==gCodeRequest),[VarSet,coreCode,[StrMerge,coreCode,"ZBKG"]],[VarSet,coreCode,[StrMerge,coreCode,"ZBRU"]]][LoopContinue]][If,(elem==gCodePartPDate),[VarSet,coreCode,[StrMerge,coreCode,codePDate]][LoopContinue]][If,(elem==gCodePartOptExpireDate),[If,[StrLength,codeOptExpireDate]>0,[VarSet,optCode,[StrMerge,optCode,"-",codeOptExpireDate]]][LoopContinue]][If,(elem==gCodePartOptNumLicense),[If,[StrLength,codeOptNumLicense]>0,[VarSet,optCode,[StrMerge,optCode,"-",codeOptNumLicense]]][LoopContinue]]][If,([StrLength,optCode]>0),[If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,1]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,1]][RoutineCall,EncryptStringByString,coreCode,coreCode,optCode,0,1][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,2]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,2]][RoutineCall,SelfEncryptString,coreCode,coreCode][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,3]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,3]][RoutineCall,EncryptStringByString,coreCode,coreCode,optCode,16,-1][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,4]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,4]][RoutineCall,EncryptStringByString,coreCode,coreCode,codeName,0,0][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,5]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,5]][If,codeIndex==gCodeRequest,[RoutineCall,BashCode,coreCode,-2]],[If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,1]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,1]][RoutineCall,SelfEncryptString,coreCode,coreCode][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,2]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,2]][RoutineCall,EncryptStringByString,coreCode,coreCode,codeName,0,0][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,3]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,3]][If,codeIndex==gCodeRequest,[RoutineCall,BashCode,coreCode,-2]]][VarSet,cryptedCode,""][If,([StrLength,optCode]>0),[VarSet,cryptedCode,[StrMerge,coreCode,optCode]],[VarSet,cryptedCode,coreCode]][RoutineCall,MakePrintable,cryptedCode,cryptedCode][RoutineCall,SetCodePart,codeIndex,gCodePartCryptedCode,cryptedCode],codeIndex][VarDef,gDebugDecryptCode,0][VarDef,gDecryptCodeErr,0][RoutineDef,DecryptCode,[VarSet,codeName,""][VarSet,codeFormat,""][VarSet,cryptedCode,""][RoutineCall,GetCodePart,codeIndex,gCodePartName,codeName][RoutineCall,GetCodePart,codeIndex,gCodePartFormat,codeFormat][RoutineCall,GetCodePart,codeIndex,gCodePartCryptedCode,cryptedCode][If,codeIndex==gCodeActivation,[VarSet,str,[StrExtract,cryptedCode,0,3]][VarSet,cryptedCode,[StrExtract,cryptedCode,4,[StrLength,cryptedCode]-1]][MemWriteString,gUserCode,str,0]][RoutineCall,MakeCryptable,cryptedCode,cryptedCode][VarSet,gDecryptCodeErr,0][VarSet,codeLState,""][VarSet,codeCId,""][VarSet,codeIDate,""][VarSet,codeLDate,""][VarSet,codeSDate,""][VarSet,codeLType,""][VarSet,codeVersion,""][VarSet,codePDate,""][VarSet,codeOptExpireDate,""][VarSet,codeOptNumLicense,""][RoutineCall,GetDefaultCodePart,gCodePartLState,codeLState][RoutineCall,GetDefaultCodePart,gCodePartCId,codeCId][RoutineCall,GetDefaultCodePart,gCodePartIDate,codeIDate][RoutineCall,GetDefaultCodePart,gCodePartLDate,codeLDate][RoutineCall,GetDefaultCodePart,gCodePartSDate,codeSDate][RoutineCall,GetDefaultCodePart,gCodePartLType,codeLType][RoutineCall,GetDefaultCodePart,gCodePartVersion,codeVersion][RoutineCall,GetDefaultCodePart,gCodePartPDate,codePDate][RoutineCall,GetDefaultCodePart,gCodePartOptExpireDate,codeOptExpireDate][RoutineCall,GetDefaultCodePart,gCodePartOptNumLicense,codeOptNumLicense][VarSet,coreCode,""][VarSet,optCode,""][VarSet,car,""][VarSet,j,-1][VarSet,elem,-1][VarSet,len,0][VarSet,cmp,0][Loop,1,[Loop,[StrLength,cryptedCode],[If,(len==0)&&(j<([StrLength,codeFormat]-1)),[VarInc,j][VarSet,elem,[StrToAsc,codeFormat,j]-'A'][If,(elem<gCodePartStartOpt),[VarSet,len,[MVarGet,gCodePartSize,elem]],[VarSet,optCode,[StrExtract,cryptedCode,i,[StrLength,cryptedCode]-1]][VarSet,j,([StrLength,codeFormat]-1)][VarSet,len,0][LoopExit]]][VarSet,car,[StrUpper,[StrExtract,cryptedCode,i,i]]][If,([StrToAsc,car]>='A')&&([StrToAsc,car]<='Z'),[VarSet,coreCode,[StrMerge,coreCode,car]][VarDec,len]],i][If,(len==0)&&(j<([StrLength,codeFormat]-1)),[VarInc,j][VarSet,elem,[StrToAsc,codeFormat,j]-'A'][If,(elem<gCodePartStartOpt),[VarSet,len,[MVarGet,gCodePartSize,elem]],[VarSet,len,0]]][If,(len>0),[VarSet,gDecryptCodeErr,1][LoopExit]][If,([StrLength,optCode]>0),[If,codeIndex==gCodeActivation,[RoutineCall,BashCode,coreCode,1]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-5]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-5]][RoutineCall,DecryptStringByString,coreCode,coreCode,codeName,0,0][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-4]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-4]][RoutineCall,DecryptStringByString,coreCode,coreCode,optCode,16,-1][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-3]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-3]][RoutineCall,SelfDecryptString,coreCode,coreCode][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-2]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-2]][RoutineCall,DecryptStringByString,coreCode,coreCode,optCode,0,1][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-1]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-1]],[If,codeIndex==gCodeActivation,[RoutineCall,BashCode,coreCode,1]][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-3]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-3]][RoutineCall,DecryptStringByString,coreCode,coreCode,codeName,0,0][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-2]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-2]][RoutineCall,SelfDecryptString,coreCode,coreCode][If,codeIndex==gCodeRequest,[RoutineCall,HashCode,coreCode,-1]][If,codeIndex==gCodeActivation,[RoutineCall,HashCode,coreCode,-1]]][VarSet,j,0][VarSet,optStrToParse,""][VarSet,kk,[StrLength,coreCode]][Loop,[StrLength,codeFormat],[VarSet,elem,[StrToAsc,codeFormat,i]-'A'][If,(elem>=gCodePartStartOpt),[VarSet,optStrToParse,[StrExtract,codeFormat,i,[StrLength,codeFormat]-1]][LoopExit]][VarSet,len,[MVarGet,gCodePartSize,elem]][If,(elem==gCodePartLState),[VarSet,codeLState,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartCId),[VarSet,codeCId,[StrExtract,coreCode,j,j+len-1]][If,(codeIndex==gCodeActivation),[RoutineCall,HashCode,codeCId,-4]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartIDate),[VarSet,codeIDate,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartLDate),[VarSet,codeLDate,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartSDate),[VarSet,codeSDate,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartLType),[VarSet,codeLType,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartVersion),[VarSet,codeVersion,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartPDate),[VarSet,codePDate,[StrExtract,coreCode,j,j+len-1]][VarAdd,j,len][LoopContinue]][If,(elem==gCodePartZBRU),[If,(codeIndex==gCodeActivation),[RoutineCall,StrCmp,cmp,[StrExtract,coreCode,j,j+len-1],"GKRU"],[RoutineCall,StrCmp,cmp,[StrExtract,coreCode,j,j+len-1],"ZBRU"]][If,(cmp!=0),[VarSet,gDecryptCodeErr,1][LoopExit]][VarAdd,j,len][LoopContinue]],i][If,(gDecryptCodeErr==1),[LoopExit]][VarSet,optExpireDateLen,0][VarSet,optNumLicenseLen,0][If,([StrLength,codeLType]==1),[Loop,1,[If,([StrToAsc,codeLType]=='P'),[LoopExit]][If,([StrToAsc,codeLType]=='D'),[VarSet,optExpireDateLen,[MVarGet,gCodePartSize,gCodePartOptExpireDate]][LoopExit]][If,([StrToAsc,codeLType]=='T'),[VarSet,optExpireDateLen,[MVarGet,gCodePartSize,gCodePartOptExpireDate]][LoopExit]][If,([StrToAsc,codeLType]=='F'),[VarSet,optNumLicenseLen,[MVarGet,gCodePartSize,gCodePartOptNumLicense]][LoopExit]][If,([StrToAsc,codeLType]=='E'),[VarSet,optExpireDateLen,[MVarGet,gCodePartSize,gCodePartOptExpireDate]][VarSet,optNumLicenseLen,[MVarGet,gCodePartSize,gCodePartOptNumLicense]][LoopExit]]]][VarSet,j,0][Loop,[StrLength,optStrToParse],[VarSet,elem,[StrToAsc,optStrToParse,i]-'A'][VarSet,len,[MVarGet,gCodePartSize,elem]][Loop,1,[If,(elem==gCodePartOptExpireDate),[If,(len==optExpireDateLen),[VarSet,codeOptExpireDate,[StrExtract,optCode,j+1,j+len]][VarAdd,j,len+1]][LoopExit]][If,(elem==gCodePartOptNumLicense),[If,(len==optNumLicenseLen),[VarSet,codeOptNumLicense,[StrExtract,optCode,j+1,j+len]][VarAdd,j,len+1]][LoopExit]][VarSet,gDecryptCodeErr,1][LoopExit]],i][If,(gDecryptCodeErr==1)||(j<[StrLength,optCode]),[VarSet,gDecryptCodeErr,1],[LoopExit]]][If,(gDecryptCodeErr==1),[VarSet,codeLState,""][VarSet,codeCId,""][VarSet,codeIDate,""][VarSet,codeLDate,""][VarSet,codeSDate,""][VarSet,codeLType,""][VarSet,codeVersion,""][VarSet,codePDate,""][VarSet,codeOptExpireDate,""][VarSet,codeOptNumLicense,""]][RoutineCall,SetCodePart,codeIndex,gCodePartLState,codeLState][RoutineCall,SetCodePart,codeIndex,gCodePartCId,codeCId][RoutineCall,SetCodePart,codeIndex,gCodePartIDate,codeIDate][RoutineCall,SetCodePart,codeIndex,gCodePartLDate,codeLDate][RoutineCall,SetCodePart,codeIndex,gCodePartSDate,codeSDate][RoutineCall,SetCodePart,codeIndex,gCodePartLType,codeLType][RoutineCall,SetCodePart,codeIndex,gCodePartVersion,codeVersion][RoutineCall,SetCodePart,codeIndex,gCodePartPDate,codePDate][RoutineCall,SetCodePart,codeIndex,gCodePartOptExpireDate,codeOptExpireDate][RoutineCall,SetCodePart,codeIndex,gCodePartOptNumLicense,codeOptNumLicense],codeIndex][RoutineDef,ClearCode,[VarSet,codeStart,codeIndex*gOneCodeSize][Loop,gNumCodeParts,[If,codePartIndex>=gCodePartLState,[RoutineCall,ClearCodePart,codeIndex,codePartIndex]],codePartIndex][RoutineCall,EncryptCode,codeIndex],codeIndex][RoutineDef,CreateCodeFile,[VarSet,fileName,""][MemReadString,gLicenseCodeFiles,fileName,256*codeIndex][If,![FileExists,fileName],[Loop,1,[If,(codeIndex<=gCodeDeactivation),[VarSet,cryptedCode,""][RoutineCall,GetCodePart,codeIndex,gCodePartCryptedCode,cryptedCode][MemDelete,SplashMemFile][MemCreate,SplashMemFile,[StrLength,cryptedCode]][MemWrite,SplashMemFile,cryptedCode,0,0][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile][LoopExit]][If,((codeIndex==gCodePublic)||(codeIndex==gCodePrivate)),[VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][MemDelete,SplashMemFile][MemCreate,SplashMemFile,(2*cryptedCodeSize)+4+5,0][VarSet,codeStart,(gCodePublic*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,gUserCode,codeStart,SplashMemFile,0,4][MemWrite,SplashMemFile,45,2,4][MemCopy,gLicenseCodes,codeStart,SplashMemFile,5,cryptedCodeSize][MemWrite,SplashMemFile,13,2,cryptedCodeSize+5][VarSet,codeStart,(gCodePrivate*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,gLicenseCodes,codeStart,SplashMemFile,cryptedCodeSize+2+5,cryptedCodeSize][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile][LoopExit]][VarSet,originalFileName,""][MemReadString,gLicenseOriginalFiles,originalFileName,256*codeIndex][VarSet,fileSize,0][If,[FileExists,originalFileName],[MemDelete,SplashMemFile2][VarSet,fileSize,[MemCreateFromFile,SplashMemFile2,originalFileName]]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][VarSet,codeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][MemDelete,SplashMemFile][MemCreate,SplashMemFile,fileSize+codeSize+1,0][If,(fileSize>0),[MemCopy,SplashMemFile2,0,SplashMemFile,0,fileSize][MemDelete,SplashMemfile2]][MemCopy,gLicenseCodes,codeStart,SplashMemFile,fileSize,codeSize][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile]]],codeIndex][RoutineDef,CreateCode,[VarSet,codeStart,codeIndex*gOneCodeSize][MemMultiWrite,gLicenseCodes,0,1,codeStart,gOneCodeSize][RoutineCall,SetCodePart,codeIndex,gCodePartName,codeName][RoutineCall,SetCodePart,codeIndex,gCodePartFormat,codeFormat][RoutineCall,ClearCode,codeIndex][RoutineCall,CreateCodeFile,codeIndex],codeIndex,codeName,codeFormat][RoutineDef,InitLicenseCodes,[RoutineCall,CreateCode,gCodeRequest,"Request code","DEG"][RoutineCall,CreateCode,gCodeActivation,"Activation code","DIEGHJMN"][RoutineCall,CreateCode,gCodeDeactivation,"Deactivation code","EDG"][RoutineCall,CreateCode,gCodeInstall1,"Main installation code","DFE"][RoutineCall,CreateCode,gCodeInstall2,"Backup installation code","DFE"][RoutineCall,CreateCode,gCodePublic,"Public code","KE"][RoutineCall,CreateCode,gCodePrivate,"Private code","DEFGHIMN"][RoutineCall,CreateCode,gCodeInternal1,"Main internal code","DEFGHIMN"][RoutineCall,CreateCode,gCodeInternal2,"Backup internal cocode","DEFGHIMN"][RoutineCall,CreateCode,gCodeInternal3,"Third internal cococodedede","DFGHILMN"][If,gTestCodeP,[RoutineCall,CreateCode,gCodeInternalP,"INTERNAL PRIVATE CODE","EGIJHLMN"]]][If,gLicenseAlreadyInitialized==0,[RoutineCall,InitLicenseCodes]][RoutineDef,ReadCodeFile,[VarSet,fileName,""][MemReadString,gLicenseCodeFiles,fileName,256*codeIndex][If,[FileExists,fileName],[Loop,1,[If,(codeIndex<=gCodeDeactivation),[MemDelete,SplashMemFile][VarSet,fileSize,[MemCreateFromFile,SplashMemFile,fileName]][VarSet,cryptedCode,""][MemReadString,SplashMemFile,cryptedCode][RoutineCall,SetCodePart,codeIndex,gCodePartCryptedCode,cryptedCode][MemDelete,SplashMemFile][RoutineCall,DecryptCode,codeIndex][LoopExit]][If,(codeIndex==gCodePublic),[MemDelete,SplashMemFile][VarSet,fileSize,[MemCreateFromFile,SplashMemFile,fileName]][VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,SplashMemFile,5,gLicenseCodes,codeStart,cryptedCodeSize][MemCopy,SplashMemFile,0,gUserCode,0,4][MemDelete,SplashMemFile][RoutineCall,DecryptCode,codeIndex][LoopExit]][If,(codeIndex==gCodePrivate),[MemDelete,SplashMemFile][MemDelete,SplashMemFile3][VarSet,fileSize,[MemCreateFromFile,SplashMemFile3,fileName]][MemCreate,SplashMemFile,cryptedCodeSize+cryptedCodeSize+2+5,0][MemCopy,SplashMemFile3,0,SplashMemFile,0,cryptedCodeSize+cryptedCodeSize+2][VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,SplashMemFile,cryptedCodeSize+7,gLicenseCodes,codeStart,cryptedCodeSize][MemDelete,SplashMemFile][MemDelete,SplashMemFile3][RoutineCall,DecryptCode,codeIndex][LoopExit]][MemDelete,SplashMemFile][VarSet,fileSize,[MemCreateFromFile,SplashMemFile,fileName]][VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][If,fileSize>0,[MemCopy,SplashMemFile,fileSize-cryptedCodeSize,gLicenseCodes,codeStart,cryptedCodeSize][MemDelete,SplashMemFile],[RoutineCall,ClearCode,codeIndex]][VarSet,str,""][MemReadString,gLicenseCodes,str,codeStart,0,0,cryptedCodeSize][RoutineCall,DecryptCode,codeIndex]]],codeIndex][RoutineDef,WriteCodeFile,[VarSet,fileName,""][MemReadString,gLicenseCodeFiles,fileName,256*codeIndex][Loop,1,[If,(codeIndex<=gCodeDeactivation),[VarSet,cryptedCode,""][RoutineCall,GetCodePart,codeIndex,gCodePartCryptedCode,cryptedCode][MemDelete,SplashMemFile][MemCreate,SplashMemFile,[StrLength,cryptedCode],0][MemWriteString,SplashMemFile,cryptedCode,0,0][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile][LoopExit]][If,![FileExists,fileName],[LoopExit]][If,(codeIndex==gCodePublic),[MemDelete,SplashMemFile][VarSet,fileSize,[MemCreateFromFile,SplashMemFile,fileName]][VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,gLicenseCodes,codeStart,SplashMemFile,5,cryptedCodeSize][MemCopy,gUserCode,0,SplashMemFile,0,4][MemWrite,SplashMemFile,45,2,4][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile][LoopExit]][If,(codeIndex==gCodePrivate),[MemDelete,SplashMemFile][VarSet,fileSize,[MemCreateFromFile,SplashMemFile,fileName]][VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,gLicenseCodes,codeStart,SplashMemFile,cryptedCodeSize+7,cryptedCodeSize][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile][LoopExit]][MemDelete,SplashMemFile][VarSet,fileSize,[MemCreateFromFile,SplashMemFile,fileName]][VarSet,cryptedCodeSize,[MVarGet,gCodePartSize,gCodePartCryptedCode]][VarSet,codeStart,(codeIndex*gOneCodeSize)+[MVarGet,gCodePartIndex,gCodePartCryptedCode]][MemCopy,gLicenseCodes,codeStart,SplashMemFile,fileSize-cryptedCodeSize,cryptedCodeSize][MemSaveToFile,SplashMemFile,fileName,1][MemDelete,SplashMemFile]],codeIndex][RoutineDef,HashPZL,[VarSet,code,""][VarSet,value,0][VarSet,num,[StrLength,pzlcode]][Loop,num,[VarSet,asc,[StrToAsc,pzlcode,i]-'A'][VarAdd,value,asc][If,value>=26,[VarSub,value,26]],i][VarSet,doAdd,0][Loop,num,[VarSet,asc,[StrToAsc,pzlcode,i]-'A'][If,doAdd,[VarAdd,value,asc][VarSet,doAdd,0],[VarAdd,value,26][VarSub,value,asc][VarSet,doAdd,1]][If,value>=26,[VarSub,value,26]][VarSet,code,[StrMerge,code,[StrFromAsc,'A'+asc],[StrFromAsc,'A'+value]]],i][VarSet,pzlcode,code],pzlcode][RoutineDef,UnhashPZL,[VarSet,code,""][VarSet,num,[StrLength,pzlcode]][VarSet,doKeep,1][Loop,num,[If,doKeep,[VarSet,code,[StrMerge,code,[StrExtract,pzlcode,i,i]]][VarSet,doKeep,0],[VarSet,doKeep,1]],i][VarSet,testcode,code][RoutineCall,HashPZL,testcode][VarSet,cmpResult,2][RoutineCall,StrCmp,cmpResult,testcode,pzlcode][If,cmpResult,[VarSet,pzlcode,""],[VarSet,pzlcode,code]],pzlcode][RoutineDef,EncryptPZL,[VarSet,code,pzlcode][RoutineCall,HashPZL,code][RoutineCall,SelfEncryptString,code,code][RoutineCall,HashCode,code,5][RoutineCall,EncryptStringByString,code,code,"PZLMAINCODE",8,1][RoutineCall,BashCode,code,-1][RoutineCall,SelfDecryptString,code,code][VarSet,pzlcode,code],pzlcode][RoutineDef,DecryptPZL,[VarSet,code,pzlcode][RoutineCall,SelfEncryptString,code,code][RoutineCall,BashCode,code,1][RoutineCall,DecryptStringByString,code,code,"PZLMAINCODE",8,1][RoutineCall,HashCode,code,-5][RoutineCall,SelfDecryptString,code,code][RoutineCall,UnhashPZL,code][VarSet,pzlcode,code],pzlcode][RoutineDef,ReadPZL,[VarSet,filename,""][VarSet,zdate,""][MemReadString,gPZLFile,filename,0][MemDelete,gPZLMemTemp][MemCreateFromFile,gPZLMemTemp,filename][MemReadString,gPZLMemTemp,zdate,0][MemDelete,gPZLMemTemp][RoutineCall,DecryptPZL,zdate][VarSet,pzldate,zdate],pzldate][RoutineDef,SavePZL,[VarSet,filename,""][VarSet,zdate,pzldate][MemReadString,gPZLFile,filename,0][RoutineCall,EncryptPZL,zdate][MemDelete,gPZLMemTemp][MemCreate,gPZLMemTemp,[StrLength,zdate]][MemWriteString,gPZLMemTemp,zdate][MemSaveToFile,gPZLMemTemp,filename,1][MemDelete,gPZLMemTemp],pzldate][RoutineDef,PZLaunch,[VarSet,filename,""][VarSet,zdate,""][MemReadString,gPZLFile,filename,0][If,[FileExists,fileName],[RoutineCall,ReadPZL,zdate]][If,[StrLength,zdate]==0,[VarSet,zdate,gCurrentCompactDate][RoutineCall,SavePZL,gCurrentCompactDate],[VarSet,idate,""][VarSet,cmpResult,2][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate][RoutineCall,CompareCompactDates,cmpResult,zdate,idate][If,cmpResult<0,[VarSet,zdate,idate][RoutineCall,SavePZL,idate]]][VarSet,pzldate,zdate],pzldate][RoutineDef,PZLUpdate,[RoutineCall,SavePZL,gCurrentCompactDate]][RoutineDef,ReinitCodes,[Loop,gNumCodes,[If,(codeIndex>=gCodeInstall1),[RoutineCall,ClearCode,codeIndex]],codeIndex]][RoutineDef,ReinitCodePart,[Loop,gNumCodes,[If,(codeIndex>=gCodeInstall1),[RoutineCall,ClearCodePart,codeIndex,codePartIndex]],codeIndex],codePartIndex][RoutineDef,BuildCodes,[Loop,gNumCodes,[If,(codeIndex>=gCodeInstall1),[RoutineCall,EncryptCode,codeIndex]],codeIndex]][RoutineDef,ReadCodes,[Loop,gNumCodes,[If,(codeIndex>=gCodeInstall1),[RoutineCall,ReadCodeFile,codeIndex]],codeIndex]][RoutineDef,WriteCodes,[Loop,gNumCodes,[If,(codeIndex>=gCodeInstall1),[RoutineCall,WriteCodeFile,codeIndex]],codeIndex]][RoutineDef,CheckSameCodes,[VarSet,sameCodes,1][VarSet,codePartIndex,-1][Loop,gNumCodeParts,[VarInc,codePartIndex][If,(codePartIndex>=gCodePartLState),[VarSet,codeFormat,""][VarSet,codePart1,""][VarSet,codePart2,""][VarSet,codePartFound,0][VarSet,cmpResult,0][VarSet,name1,""][VarSet,name2,""][VarSet,codeIndex,-1][Loop,gNumCodes,[VarInc,codeIndex][If,(codeIndex>=gCodeInstall1),[RoutineCall,GetCodePart,codeIndex,gCodePartFormat,codeFormat][If,[StrFind,[StrFromAsc,'A'+codePartIndex],codeFormat]!=-1,[If,(codePartFound==0),[RoutineCall,GetCodePart,codeIndex,gCodePartName,name1][RoutineCall,GetCodePart,codeIndex,codePartIndex,codePart1][VarSet,codePartFound,1],[RoutineCall,GetCodePart,codeIndex,gCodePartName,name2][RoutineCall,GetCodePart,codeIndex,codePartIndex,codePart2][RoutineCall,StrCmp,cmpResult,codePart1,codePart2][VarSet,tmp,[StrMerge,"CmpCodePart(",codePartIndex,") = ",cmpResult]][If,(cmpResult!=0),[VarSet,sameCodes,0][LoopExit]]]]]][If,sameCodes==0,[LoopExit]]]],sameCodes][VarDef,gActivationMessage,""][VarDef,gBuyZBrushMenu,"ZPlugin:Buy ZBrush"][VarDef,gBuyZBrushButton,[StrMerge,gBuyZBrushMenu,":ZBrush Webstore    "]][VarDef,gActivateZBrushButton,[StrMerge,gBuyZBrushMenu,":ZBrush Activation    "]][RoutineDef,UpdateInternalCodeParts,[RoutineCall,SetCodePart,gCodeInstall1,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodeInstall1,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodeInstall2,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodeInstall2,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodePublic,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodePrivate,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodePrivate,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodePrivate,gCodePartLDate,ldate][RoutineCall,SetCodePart,gCodePrivate,gCodePartSDate,sdate][RoutineCall,SetCodePart,gCodePrivate,gCodePartLType,ltype][RoutineCall,ClearCodePart,gCodePrivate,gCodePartOptExpireDate][RoutineCall,ClearCodePart,gCodePrivate,gCodePartOptNumLicense][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodeInternal1,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLDate,ldate][RoutineCall,SetCodePart,gCodeInternal1,gCodePartSDate,sdate][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLType,ltype][RoutineCall,ClearCodePart,gCodeInternal1,gCodePartOptExpireDate][RoutineCall,ClearCodePart,gCodeInternal1,gCodePartOptNumLicense][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodeInternal2,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLDate,ldate][RoutineCall,SetCodePart,gCodeInternal2,gCodePartSDate,sdate][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLType,ltype][RoutineCall,ClearCodePart,gCodeInternal2,gCodePartOptExpireDate][RoutineCall,ClearCodePart,gCodeInternal2,gCodePartOptNumLicense][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodeInternal3,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLDate,ldate][RoutineCall,SetCodePart,gCodeInternal3,gCodePartSDate,sdate][RoutineCall,SetCodePart,gCodeInternal3,gCodePartPDate,pdate][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLType,ltype][RoutineCall,ClearCodePart,gCodeInternal3,gCodePartOptExpireDate][RoutineCall,ClearCodePart,gCodeInternal3,gCodePartOptNumLicense][If,gTestCodeP,[RoutineCall,SetCodePart,gCodeInternalP,gCodePartLState,lstate][RoutineCall,SetCodePart,gCodeInternalP,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodeInternalP,gCodePartLDate,ldate][RoutineCall,SetCodePart,gCodeInternalP,gCodePartSDate,sdate][RoutineCall,SetCodePart,gCodeInternalP,gCodePartPDate,pdate][RoutineCall,SetCodePart,gCodeInternalP,gCodePartLType,ltype][If,[StrLength,zversion]>0,[RoutineCall,SetCodePart,gCodeInternalP,gCodePartVersion,zversion]][RoutineCall,ClearCodePart,gCodeInternalP,gCodePartOptExpireDate][RoutineCall,ClearCodePart,gCodeInternalP,gCodePartOptNumLicense]],lstate,ldate,sdate,pdate,ltype,zversion][RoutineDef,UpdateInternalCodeParts2,[RoutineCall,UpdateInternalCodeParts,lstate,ldate,sdate,pdate,ltype,zversion][RoutineCall,SetCodePart,gCodePrivate,gCodePartOptExpireDate,edate][RoutineCall,SetCodePart,gCodeInternal1,gCodePartOptExpireDate,edate][RoutineCall,SetCodePart,gCodeInternal2,gCodePartOptExpireDate,edate][RoutineCall,SetCodePart,gCodeInternal3,gCodePartOptExpireDate,edate][If,gTestCodeP,[RoutineCall,SetCodePart,gCodeInternalP,gCodePartOptExpireDate,edate]],lstate,ldate,sdate,pdate,ltype,edate,zversion][VarDef,gNeedRebuildCodes,0][VarDef,gNeedWriteCodes,0][RoutineDef,CreateRequestFile,[RoutineCall,ClearCode,gCodeRequest][VarSet,currentDate,gCurrentCompactDate][RoutineCall,GetCurrentDate][VarSet,lstate,[StrExtract,gCurrentCompactDate,6,6]][RoutineCall,SetCodePart,gCodeRequest,gCodePartLState,lstate][VarSet,gCurrentCompactDate,currentDate][RoutineCall,SetCodePart,gCodeRequest,gCodePartCId,gComputerId][RoutineCall,SetCodePart,gCodeRequest,gCodePartLDate,gCurrentCompactDate][RoutineCall,EncryptCode,gCodeRequest][RoutineCall,WriteCodeFile,gCodeRequest]][VarDef,gErrActivation,0][RoutineDef,ReadCodeActivation,[RoutineCall,ReadCodeFile,gCodeActivation][RoutineCall,DecryptCode,gCodeActivation][VarSet,gErrActivation,gDecryptCodeErr]][RoutineDef,CreateDeactivationFile,[RoutineCall,ClearCode,gCodeDeactivation][RoutineCall,SetCodePart,gCodeDeactivation,gCodePartLState,"D"][VarSet,cid,""][RoutineCall,GetCodePart,gCodePublic,gCodePartCId,cid][RoutineCall,SetCodePart,gCodeDeactivation,gCodePartCId,cid][VarSet,idate,""][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate][RoutineCall,SetCodePart,gCodeDeactivation,gCodePartIDate,idate][VarSet,ldate,""][RoutineCall,GetCodePart,gCodeInternal3,gCodePartLDate,ldate][Loop,1000,[VarSet,tmp,""][VarSet,tmpVal,0][RoutineCall,GetCurrentDate][RoutineCall,CompareCompactDates,tmpVal,gCurrentCompactDate,ldate][If,(tmpVal!=0),[LoopExit]][Loop,1000,[If,(i&1),[VarSet,tmp,[StrExtract,tmp,0,0]],[VarSet,tmp,[StrMerge,tmp,"A"]]],i]][VarSet,ldate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodeDeactivation,gCodePartLDate,ldate][VarSet,sdate,""][RoutineCall,GetCodePart,gCodeInternal3,gCodePartSDate,sdate][RoutineCall,SetCodePart,gCodeDeactivation,gCodePartSDate,sdate][VarSet,ltype,""][RoutineCall,GetCodePart,gCodeInternal1,gCodePartLType,ltype][RoutineCall,SetCodePart,gCodeDeactivation,gCodePartLType,ltype][RoutineCall,EncryptCode,gCodeDeactivation][RoutineCall,WriteCodeFile,gCodeDeactivation][RoutineCall,UpdateInternalCodeParts,"D",ldate,sdate,gCurrentCompactDate,"P",""][RoutineCall,BuildCodes][RoutineCall,WriteCodes]][RoutineDef,TestActivationCode,[VarSet,resultVal,0][VarSet,cmpResult,0][Loop,1,[VarSet,lstate,""][VarSet,cid,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartLState,lstate][RoutineCall,GetCodePart,gCodeActivation,gCodePartCId,cid][RoutineCall,StrCmp,cmpResult,cid,gComputerId][If,(gErrActivation!=0)||([StrToAsc,lstate]!='A')||(cmpResult!=0),[VarSet,resultVal,1][LoopExit]][VarSet,idate2,""][VarSet,ldate,""][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate2][RoutineCall,GetCodePart,gCodeActivation,gCodePartLDate,ldate][RoutineCall,CompareCompactDates,cmpResult,idate2,ldate][If,(cmpResult<=0),[RoutineCall,CompareCompactDates,cmpResult,ldate,gCurrentCompactDate]][If,(cmpResult>0),[VarSet,resultVal,2][LoopExit]][VarSet,ldate2,""][VarSet,lstate2,""][RoutineCall,GetCodePart,gCodeInternal2,gCodePartLDate,ldate2][RoutineCall,GetCodePart,gCodePrivate,gCodePartLState,lstate2][RoutineCall,CompareCompactDates,cmpResult,ldate2,ldate][If,([StrToAsc,lstate2]=='D')&&(cmpResult>0),[VarSet,resultVal,3][LoopExit]][VarSet,sdate,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartSDate,sdate][RoutineCall,TestTimeRange,cmpResult,ldate,sdate,gCurrentCompactDate][If,(cmpResult==0),[VarSet,resultVal,4][LoopExit]][VarSet,zversion,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartVersion,zversion][VarSet,zversionOK,1][If,gIsMacOS,[If,[StrToAsc,zversion,3]!='M',[VarSet,zversionOK,0]],[If,[StrToAsc,zversion,3]!='W',[VarSet,zversionOK,0]]][VarSet,version,INT(0.2+(100*gZBrushVersion))][VarSet,tmpDiv,100][VarSet,tmpVersion,version][Loop,3,[VarSet,tmpVal,INT(tmpVersion/tmpDiv)][VarSet,tmpVersion,INT(tmpVersion-(tmpDiv*tmpVal))][VarSet,tmpDiv,INT(tmpDiv/10)][VarSet,tmpVal2,[StrToAsc,zversion,i]-'A'][If,tmpVal!=tmpVal2,[VarSet,zversionOK,0][LoopExit]],i][If,zversionOK==0,[VarSet,resultVal,5][LoopExit]][VarSet,ltype,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartLType,ltype][If,([StrToAsc,ltype]=='P'),[VarSet,resultVal,0][LoopExit]][If,([StrToAsc,ltype]=='T')||([StrToAsc,ltype]=='D'),[VarSet,edate,""][RoutineCall,GetCodePart,gCodeInstall2,gCodePartIDate,idate2][RoutineCall,GetCodePart,gCodeActivation,gCodePartOptExpireDate,edate][RoutineCall,CompactDate,edate,edate][RoutineCall,CompareCompactDates,cmpResult,idate2,edate][If,(cmpResult<=0),[RoutineCall,CompareCompactDates,cmpResult,gCurrentCompactDate,edate]][If,(cmpResult>0),[VarSet,resultVal,6][LoopExit]][VarSet,resultVal,0][LoopExit]]],resultVal][RoutineDef,ImportActivationFile,[VarSet,cmpResult,0][RoutineCall,ReadCodeActivation][Loop,1,[VarSet,lstate,""][VarSet,cid,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartLState,lstate][RoutineCall,GetCodePart,gCodeActivation,gCodePartCId,cid][RoutineCall,StrCmp,cmpResult,cid,gComputerId][If,(gErrActivation!=0)||([StrToAsc,lstate]!='A')||(cmpResult!=0),[LoopExit]][VarSet,idate2,""][VarSet,ldate,""][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate2][RoutineCall,GetCodePart,gCodeActivation,gCodePartLDate,ldate][RoutineCall,CompareCompactDates,cmpResult,idate2,ldate][If,(cmpResult<=0),[RoutineCall,CompareCompactDates,cmpResult,ldate,gCurrentCompactDate]][If,(cmpResult>0),[LoopExit]][VarSet,ldate2,""][VarSet,lstate2,""][RoutineCall,GetCodePart,gCodeInternal2,gCodePartLDate,ldate2][RoutineCall,GetCodePart,gCodePrivate,gCodePartLState,lstate2][RoutineCall,CompareCompactDates,cmpResult,ldate2,ldate][If,([StrToAsc,lstate2]=='D')&&(cmpResult>0),[LoopExit]][VarSet,sdate,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartSDate,sdate][RoutineCall,TestTimeRange,cmpResult,ldate,sdate,gCurrentCompactDate][If,(cmpResult==0),[LoopExit]][VarSet,zversion,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartVersion,zversion][VarSet,zversionOK,1][If,gIsMacOS,[If,[StrToAsc,zversion,3]!='M',[VarSet,zversionOK,0]],[If,[StrToAsc,zversion,3]!='W',[VarSet,zversionOK,0]]][VarSet,version,INT(0.2+(100*gZBrushVersion))][VarSet,tmpDiv,100][VarSet,tmpVersion,version][Loop,3,[VarSet,tmpVal,INT(tmpVersion/tmpDiv)][VarSet,tmpVersion,INT(tmpVersion-(tmpDiv*tmpVal))][VarSet,tmpDiv,INT(tmpDiv/10)][VarSet,tmpVal2,[StrToAsc,zversion,i]-'A'][If,tmpVal!=tmpVal2,[VarSet,zversionOK,0][LoopExit]],i][If,zversionOK==0,[LoopExit]][VarSet,ltype,""][RoutineCall,GetCodePart,gCodeActivation,gCodePartLType,ltype][If,([StrToAsc,ltype]=='P'),[RoutineCall,UpdateInternalCodeParts,"A",ldate,sdate,gCurrentCompactDate,"P",zversion][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1][LoopExit]][If,([StrToAsc,ltype]=='T')||([StrToAsc,ltype]=='D'),[VarSet,edate,""][RoutineCall,GetCodePart,gCodeInstall2,gCodePartIDate,idate2][RoutineCall,GetCodePart,gCodeActivation,gCodePartOptExpireDate,edate][RoutineCall,CompactDate,edate,edate][RoutineCall,CompareCompactDates,cmpResult,idate2,edate][If,(cmpResult<=0),[RoutineCall,CompareCompactDates,cmpResult,gCurrentCompactDate,edate],[VarSet,cmpResult,1]][If,(cmpResult>0),[LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLState,"E"][If,cmpResult==0,[VarSet,ldate2,""][RoutineCall,GetCodePart,gCodeInternal2,gCodePartLDate,ldate2][RoutineCall,CompareCompactDates,cmpResult,ldate2,ldate][If,(cmpResult>=0),[LoopExit]]][RoutineCall,GetCodePart,gCodeActivation,gCodePartOptExpireDate,edate][RoutineCall,UpdateInternalCodeParts2,"A",ldate,sdate,gCurrentCompactDate,ltype,edate,zversion][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1][LoopExit]]]][RoutineDef,RetryActivationFile,[VarSet,gNeedRebuildCodes,0][VarSet,gNeedWriteCodes,0][Loop,1,[VarSet,fileName,""][RoutineCall,GetCodeFile,gCodeActivation,fileName][If,([FileExists,fileName]==0),[LoopExit]][If,theMode==0,[RoutineCall,ReadCodeActivation][VarSet,resultVal,0][RoutineCall,TestActivationCode,resultVal][If,resultVal!=0,[RoutineCall,ClearCode,gCodeActivation][VarSet,gActivationMessage,"Activation failed!"][LoopExit]]][RoutineCall,ImportActivationFile]][If,(gNeedRebuildCodes==1),[RoutineCall,BuildCodes]][If,(gNeedWriteCodes==1),[RoutineCall,WriteCodes]],theMode][RoutineDef,ShowLicenseAgreement,[MemDelete,SplashMemTemp][MemCreateFromFile,SplashMemTemp,"ZBRUSH_LicenseAgreement.txt"][If,([MemGetSize,SplashMemTemp]>100),[Loop,100000,[NoteIButton,,,0,1,1,1,480,480,,,0,0,0][NoteIButton,,SPLASH,0,1,30,100,420,315,0,0xa0a0a0,0,0,.25][NoteIButton,,IMAGE_ZLogoForNotes.psd,0,1,200,1,,,0,0xffffff,0,0,1][NoteIButton,,IMAGE_ZLogoForNotes.psd,0,1,200,1,,,0,0xffffff,0,0,1][NoteIButton,MemBlock:SplashMemTemp,,0,1,30,100,420,315,0xc0c0c0,0xf0f0f0,0,1,1][NoteIButton,"\Cff9923Agree",,0,0,380,425,70,18,,,.5,.9,][NoteIButton,"\Cc0c0c0Exit",,0,0,30,425,70,18,,,.5,.9,][VarSet,result,[Note,,,,0x404040,,,,,,,,]][If,(Result==6),[MemDelete,SplashMemTemp][LoopExit]][If,(result==7),[MemDelete,SplashMemTemp][IPress,Close][RoutineCall,SplashExit]]],[MemDelete,SplashMemTemp][NoteIButton,,,0,1,1,1,480,80,,,0,0,0][Note,"\Ce0e0e0Sorry, The \Cff9923LicenseAgreement.txt\Ce0e0e0 file is not found.\n\nPlease locate the file or reinstall ZBrush and try again. ",,-1][NoteIButton,"\Cff9923   OK   "][VarSet,result,[Note,,,,0x404040,,,,,,,,]][IPress,Close][RoutineCall,SplashExit]]][RoutineDef,GenOSCode,[VarSet,osStr,""][VarSet,val,IRAND(35)][If,val<26,[VarSet,osStr,[StrMerge,osStr,[StrFromAsc,'A'+val]]],[VarSet,osStr,[StrMerge,osStr,[StrFromAsc,'0'+(val-26)]]]][VarSet,val,IRAND(35)][If,val<26,[VarSet,osStr,[StrMerge,osStr,[StrFromAsc,'A'+val]]],[VarSet,osStr,[StrMerge,osStr,[StrFromAsc,'0'+(val-26)]]]][If,gIsMacOS,[VarSet,osStr,[StrMerge,osStr,"5"]],[VarSet,osStr,[StrMerge,osStr,"0"]]][VarSet,val,IRAND(35)][If,val<26,[VarSet,osStr,[StrMerge,osStr,[StrFromAsc,'A'+val]]],[VarSet,osStr,[StrMerge,osStr,[StrFromAsc,'0'+(val-26)]]]][VarSet,codeStr,osStr],codeStr][RoutineDef,DoWebRequest,[VarSet,requestName,""][VarSet,requestCode,""][Loop,1,[If,([StrToAsc,requestType]=='A'),[VarSet,requestName,"activation"][RoutineCall,GetCodePart,gCodeRequest,gCodePartCryptedCode,requestCode]][If,([StrToAsc,requestType]=='D'),[VarSet,requestName,"deactivation"][RoutineCall,GetCodePart,gCodeDeactivation,gCodePartCryptedCode,requestCode]][If,([StrToAsc,requestType]=='T'),[VarSet,requestName,"trial"][RoutineCall,GetCodePart,gCodeRequest,gCodePartCryptedCode,requestCode]]][VarSet,webZPlug,"ZDATA_ZPlugs64/SplashData/WebZPlug.dll"][If,![FileExists,webZPlug],[VarSet,webZPlug,"ZDATA_ZPlugs64/WebZPlug.dll"]][If,[FileExists,webZPlug],[VarSet,osStr,""][RoutineCall,GenOSCode,osStr][VarSet,versionVal,INT(0.5+(100*gZBrushVersion))][VarSet,waddr,[StrMerge,"https://register.pixologic.com/",requestName,"/?pid=ZBrush",versionVal,"&o=",osStr,"&ref=",requestCode]][FileExecute,webZPlug,"HTTP_Browse",waddr][Note,[StrMerge,"\Cff9923Launching browser to \Ce0e0e0www.pixologic.com/",requestName],,.5],[Note,[StrMerge,"\Cff9923Open the following web page:\Cffffff\n",waddr]]],requestType][RoutineDef,DoWebActivationRequest,[RoutineCall,DoWebRequest,"A"]][RoutineDef,DoWebDeactivationRequest,[RoutineCall,DoWebRequest,"D"]][RoutineDef,DoWebTrialRequest,[RoutineCall,DoWebRequest,"T"]][RoutineDef,AppendToSplashMemTemp,[VarAdd,memSize,[MemWriteString,SplashMemTemp,inputString,memSize]][VarDec,memSize],memSize,inputString][RoutineDef,AppendLineToSplashMemTemp,[VarAdd,memSize,[MemWriteString,SplashMemTemp,inputString,memSize]][MemWrite,SplashMemTemp,13,1,memSize-1],memSize,inputString][RoutineDef,DoEmailRequest,[VarSet,requestName,""][VarSet,requestCode,""][If,([StrToAsc,requestType]=='A'),[VarSet,requestName,"registration"][RoutineCall,GetCodePart,gCodeRequest,gCodePartCryptedCode,requestCode]][If,([StrToAsc,requestType]=='D'),[VarSet,requestName,"deactivate"][RoutineCall,GetCodePart,gCodeDeactivation,gCodePartCryptedCode,requestCode]][If,([StrToAsc,requestType]=='T'),[VarSet,requestName,"trial"][RoutineCall,GetCodePart,gCodeRequest,gCodePartCryptedCode,requestCode]][VarSet,requestNameFirstUpper,[StrMerge,[StrUpper,[StrExtract,requestName,0,0]],[StrExtract,requestName,1,[StrLength,requestName]-1]]][VarSet,webZPlug,"ZDATA_ZPlugs64/SplashData/WebZPlug.dll"][If,![FileExists,webZPlug],[VarSet,webZPlug,"ZDATA_ZPlugs64/WebZPlug.dll"]][VarSet,osStr,""][RoutineCall,GenOSCode,osStr][VarSet,versionVal,INT(0.5+(100*gZBrushVersion))][If,[FileExists,webZPlug],[FileExecute,webZPlug,"HTTP_Browse",[StrMerge,"mailto:",requestName,"@pixologic.com?subject=ZBrush%20",versionVal,"%20",osStr,"%20",requestNameFirstUpper,"%20Request%20",requestCode,"&body=First%20Name:%0ALast%20Name:%0ARegistered%20Email:%0ASerial%20Number:%0AComputer%20Description:%0A"]][Note,[StrMerge,"\Cff9923Prepering email to \Ce0e0e0",requestName,"@pixologic.com"],,.5],[MemDelete,SplashMemTemp][MemCreate,SplashMemTemp,4096][VarSet,i,0][RoutineCall,AppendLineToSplashMemTemp,i,"\Cff9923Send the following email:"][RoutineCall,AppendLineToSplashMemTemp,i,[StrMerge,"\Cff9923to: \Cffffff",requestName,"@pixologic.com"]][RoutineCall,AppendLineToSplashMemTemp,i,[StrMerge,"\Cff9923subject: \CffffffZBrush ",versionVal," ",osStr," ",requestNameFirstUpper," Request ",requestCode]][RoutineCall,AppendLineToSplashMemTemp,i,"\Cff9923body:"][RoutineCall,AppendLineToSplashMemTemp,i,"\CffffffFirst Name: \Ce0e0e0[your first name]"][RoutineCall,AppendLineToSplashMemTemp,i,"\CffffffLast Name: \Ce0e0e0[your last name]"][RoutineCall,AppendLineToSplashMemTemp,i,"\CffffffRegistered Email: \Ce0e0e0[your email]"][RoutineCall,AppendLineToSplashMemTemp,i,"\CffffffSerial Number: \Ce0e0e0[your serial number]"][MemWrite,SplashMemTemp,0,1,i][MemResize,SplashMemTemp,i+1][NoteIButton,MemBlock:SplashMemTemp,,,,10,50,600,150][Note,""][MemDelete,SplashMemTemp]],requestType][RoutineDef,DoEmailActivationRequest,[RoutineCall,DoEmailRequest,"A"]][RoutineDef,DoEmailDeactivationRequest,[RoutineCall,DoEmailRequest,"D"]][RoutineDef,DoEmailTrialRequest,[RoutineCall,DoEmailRequest,"T"]][RoutineDef,CreateSysLogFile,[MemDelete,SplashMemTemp][MemCreate,SplashMemTemp,128,0][MemWriteString,SplashMemTemp,[StrMerge,"\n\rARPGHHV",gCurrentCompactDate],1][MemSaveToFile,SplashMemTemp,"ZDATA_ZPlugs64/SplashData/sysLog.zsc",1][MemDelete,SplashMemTemp][ZBrushLicense,"ZDATA_ZPlugs64/SplashData/sysLog.zsc"]][RoutineDef,AddDeactivationMenu,[If,[IExists,"ZPlugin:Get ZBrush full version:Buy ZBrush"],[IClose,[StrMerge,gBuyZBrushMenu,":"]]][ISubPalette,"ZPlugin:Deactivation"][IButton,"ZPlugin:Deactivation:Web Deactivation (best)","Click to deactivate your version by the web, releasing an activation...",[VarSet,cmpResult,0][RoutineCall,CmpCodePart,cmpResult,gCodeInternal1,gCodePartLState,"A"][If,(cmpResult!=0),[Note,"\Cff9923Cannot deactivate license!\n\CffffffThe license is not activated."][Exit]][NoteIButton,"OK"][NoteIButton,"Cancel"][VarSet,choice,[Note,"\Cff9923Do you really want to deactivate?\n\CffffffAfter deactivation, you will not be able to run ZBrush any more on this computer."]][If,choice==1,[RoutineCall,CreateDeactivationFile][RoutineCall,CreateSysLogFile][RoutineCall,DoWebDeactivationRequest][IPress,Close][Exit]]][IButton,"ZPlugin:Deactivation:Manual Deactivation","Click to deactivate your version manually, releasing an activation...",[VarSet,lstate,""][RoutineCall,GetCodePart,gCodePrivate,gCodePartLState,lstate][If,([StrToAsc,lstate]!='A'),[Note,"\Cff9923Cannot deactivate license!\n\CffffffThe license is not activated, so it cannot be deactivated."][Exit]][NoteIButton,"OK"][NoteIButton,"Cancel"][VarSet,choice,[Note,"\Cff9923Do you really want to deactivate?\n\CffffffAfter deactivation, you will not be able to run ZBrush any more on this computer."]][If,choice==1,[RoutineCall,CreateDeactivationFile][RoutineCall,CreateSysLogFile][VarSet,cryptedCode,""][RoutineCall,GetCodePart,gCodeDeactivation,gCodePartCryptedCode,cryptedCode][Note,[StrMerge,"\Cff9923Your version of ZBrush was deactivated!\n\CffffffPlease, contact the technical support to release an activation on your account, and give the following deactivation code:\n",cryptedCode]][IPress,Close][Exit]]]][RoutineDef,GoZBrushWebstore,[VarSet,webZPlug,"ZDATA_ZPlugs64/SplashData/WebZPlug.dll"][If,![FileExists,webZPlug],[VarSet,webZPlug,"ZDATA_ZPlugs64/WebZPlug.dll"]][If,[FileExists,webZPlug],[VarSet,waddr,"http://www.pixologic.com/store/"][FileExecute,webZPlug,"HTTP_Browse",waddr],[Note,"\CffffffTo purchase the last ZBrush version,\n\Cccccccplease go to \Cff9923http://www.pixologic.com/store/"]][VarSet,ltype,""][RoutineCall,GetCodePart,gCodePrivate,gCodePartLType,ltype][If,[StrToAsc,ltype]=='D',[RoutineCall,GoZBrushActivation]]][RoutineDef,GoZBrushActivation,[VarSet,gActivationMessage,"\Cff9923ZBrush Activation:  "][RoutineCall,DoZBrushRegistration,0]][RoutineDef,AddActivationMenu,[ISubPalette,gBuyZBrushMenu][IButton,gBuyZBrushButton,"Click to purchase ZBrush on the Pixologic Webstore",[RoutineCall,GoZBrushWebstore]][IButton,gActivateZBrushButton,"Click to activate a full license of ZBrush",[RoutineCall,GoZBrushActivation]]][RoutineDef,ValidateZBrushLicenseFull,[VarSet,licenseFile,""][RoutineCall,GetCodeFile,gCodePublic,licenseFile][ZBrushLicense,licenseFile][RoutineCall,AddDeactivationMenu][Exit]][RoutineDef,ValidateZBrushLicenseTimeLimited,[VarSet,licenseFile,""][RoutineCall,GetCodeFile,gCodePublic,licenseFile][ZBrushLicense,licenseFile][RoutineCall,AddDeactivationMenu][VarSet,mdate,gCurrentCompactDate][VarSet,edate,""][VarSet,cdate,""][VarSet,result,0][RoutineCall,GetCodePart,gCodeInternal2,gCodePartOptExpireDate,edate][RoutineCall,CompactDate,cdate,edate][RoutineCall,AddCompactDate,mdate,0,0,16,0,0,0][RoutineCall,CompareCompactDates,result,mdate,cdate][If,result>=0,[VarSet,month,""][VarSet,dayAndYear,[StrMerge,[StrExtract,edate,8,9],", ",[StrExtract,edate,0,3]]][VarSet,mval,(10*INT([StrToAsc,edate,5]-48))+INT([StrToAsc,edate,6]-48)][Loop,1,[If,mval==1,[VarSet,month,"January"][LoopExit]][If,mval==2,[VarSet,month,"February"][LoopExit]][If,mval==3,[VarSet,month,"March"][LoopExit]][If,mval==4,[VarSet,month,"April"][LoopExit]][If,mval==5,[VarSet,month,"May"][LoopExit]][If,mval==6,[VarSet,month,"June"][LoopExit]][If,mval==7,[VarSet,month,"July"][LoopExit]][If,mval==8,[VarSet,month,"August"][LoopExit]][If,mval==9,[VarSet,month,"September"][LoopExit]][If,mval==10,[VarSet,month,"October"][LoopExit]][If,mval==11,[VarSet,month,"November"][LoopExit]][If,mval==12,[VarSet,month,"December"][LoopExit]][VarSet,month,"month"]][MemDelete,SplashMemTemp2][MemCreate,SplashMemTemp2,4096][VarSet,memSize,0][VarSet,memSize,[MemWriteString,SplashMemTemp2,"\Cc0c0c0Your version of \Cff9923ZBrush\Cc0c0c0 will expire on \Cc0c0c0"]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,month,memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"\Cffffff \Cc0c0c0",memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,dayAndYear,memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"\Cffffff.\n\n\n",memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"If you want to continue running ZBrush after this date,\nyou will need to buy another license on our webstore.",memSize]][MemResize,SplashMemTemp2,memsize][NoteIButton,,,0,1,1,1,490,180,,,0,0,0][NoteIButton,MemBlock:SplashMemTemp2,,0,1,10,10,480,120,0xc0c0c0,0xf0f0f0,0,1,1][NoteIButton,"\Cff9923Go to the\Cc0c0c0 WebStore",,0,0,40,140,180,38,,,,1,1][NoteIButton,"\Cff9923Continue\Cc0c0c0 ZBrush",,0,0,270,140,180,38,,,,1,1][VarSet,result,[Note,,,,0x404040,,,,,,,,]][If,result==3,[RoutineCall,GoZBrushWebstore]][MemDelete,SplashMemTemp2]][Exit]][RoutineDef,ValidateZBrushLicenseTrial,[VarSet,licenseFile,""][RoutineCall,GetCodeFile,gCodePublic,licenseFile][ZBrushLicense,licenseFile][RoutineCall,AddActivationMenu][VarSet,edate,""][RoutineCall,GetCodePart,gCodeInternal2,gCodePartOptExpireDate,edate][VarSet,month,""][VarSet,dayAndYear,[StrMerge,[StrExtract,edate,8,9],", ",[StrExtract,edate,0,3]]][VarSet,mval,(10*INT([StrToAsc,edate,5]-48))+INT([StrToAsc,edate,6]-48)][Loop,1,[If,mval==1,[VarSet,month,"January"][LoopExit]][If,mval==2,[VarSet,month,"February"][LoopExit]][If,mval==3,[VarSet,month,"March"][LoopExit]][If,mval==4,[VarSet,month,"April"][LoopExit]][If,mval==5,[VarSet,month,"May"][LoopExit]][If,mval==6,[VarSet,month,"June"][LoopExit]][If,mval==7,[VarSet,month,"July"][LoopExit]][If,mval==8,[VarSet,month,"August"][LoopExit]][If,mval==9,[VarSet,month,"September"][LoopExit]][If,mval==10,[VarSet,month,"October"][LoopExit]][If,mval==11,[VarSet,month,"November"][LoopExit]][If,mval==12,[VarSet,month,"December"][LoopExit]][VarSet,month,"month"]][MemDelete,SplashMemTemp2][MemCreate,SplashMemTemp2,4096][VarSet,memSize,0][VarSet,memSize,[MemWriteString,SplashMemTemp2,"\Cc0c0c0Thank you for trying \Cff9923ZBrush\Cc0c0c0!\n\CffffffYour trial version will expire on \Cc0c0c0"]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,month,memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"\Cffffff \Cc0c0c0",memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,dayAndYear,memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"\Cffffff.\n\n\n",memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"At any time while running this trial version,\n",memSize]][VarDec,memSize][VarAdd,memSize,[MemWriteString,SplashMemTemp2,"you can \Cff9923buy\Cffffff/\Cff9923activate\Cffffff a \Cc0c0c0full ZBrush version\Cffffff in the '\Cc0c0c0ZPlugin\Cffffff' menu.",memSize]][MemResize,SplashMemTemp2,memsize][NoteIButton,,,0,1,1,1,490,180,,,0,0,0][NoteIButton,MemBlock:SplashMemTemp2,,0,1,10,10,480,120,0xc0c0c0,0xf0f0f0,0,1,1][NoteIButton,"\Cff9923Buy\Cc0c0c0 ZBrush",,0,0,80,140,120,38,,,,1,1][NoteIButton,"\Cff9923Continue\Cc0c0c0 Trial",,0,0,300,140,120,38,,,,1,1][VarSet,result,[Note,,,,0x404040,,,,,,,,]][If,result==3,[RoutineCall,GoZBrushWebstore]][MemDelete,SplashMemTemp2][Exit]][RoutineDef,ValidateZBrushLicense,[RoutineCall,PZLUpdate][VarSet,ltype,""][RoutineCall,GetCodePart,gCodePrivate,gCodePartLType,ltype][If,[StrToAsc,ltype]=='D',[RoutineCall,ValidateZBrushLicenseTrial],[If,[StrToAsc,ltype]=='T',[RoutineCall,ValidateZBrushLicenseTimeLimited],[RoutineCall,ValidateZBrushLicenseFull]]][Exit]][RoutineDef,CheckIsSerialNumber,[VarSet,result,0][VarSet,num,[StrLength,code]][VarSet,first,0][VarSet,last,num][VarSub,last,1][Loop,num,[VarSet,car,[StrToAsc,code,first]][If,(car>='0')&&(car<='9'),[LoopExit]][If,(car>='A')&&(car<='Z'),[LoopExit]][If,(car>='a')&&(car<='z'),[LoopExit]][VarAdd,first,1]][VarSub,num,first][Loop,num,[VarSet,car,[StrToAsc,code,last]][If,(car>='0')&&(car<='9'),[LoopExit]][If,(car>='A')&&(car<='Z'),[LoopExit]][If,(car>='a')&&(car<='z'),[LoopExit]][VarSub,last,1]][VarSet,num,last][VarAdd,num,1][VarSub,num,first][If,num==19,[VarSet,index,0][Loop,4,[VarSet,last,first][VarAdd,last,index][VarSet,car,[StrToAsc,code,last]][If,car<'0',[LoopExit]][If,(car>'9')&&(car<'A'),[LoopExit]][If,(car>'Z')&&(car<'a'),[LoopExit]][If,car>'z',[LoopExit]][VarAdd,last,5][VarSet,car,[StrToAsc,code,last]][If,car<'0',[LoopExit]][If,(car>'9')&&(car<'A'),[LoopExit]][If,(car>'Z')&&(car<'a'),[LoopExit]][If,car>'z',[LoopExit]][VarAdd,last,5][VarSet,car,[StrToAsc,code,last]][If,car<'0',[LoopExit]][If,(car>'9')&&(car<'A'),[LoopExit]][If,(car>'Z')&&(car<'a'),[LoopExit]][If,car>'z',[LoopExit]][VarAdd,last,5][VarSet,car,[StrToAsc,code,last]][If,car<'0',[LoopExit]][If,(car>'9')&&(car<'A'),[LoopExit]][If,(car>'Z')&&(car<'a'),[LoopExit]][If,car>'z',[LoopExit]][VarAdd,index,1]][If,(index==4),[VarSet,result,1]]],code,result][RoutineDef,AskActivationCode,[VarSet,tmp,[StrAsk,"Click here and type your activation code or press CTRL+V to paste, then press Enter/Return.","Enter the activation code and press Enter/Return"]][VarSet,isSerial,0][RoutineCall,CheckIsSerialNumber,tmp,isSerial][If,isSerial,[MemDelete,SplashMemTemp][MemCreate,SplashMemTemp,4096,0][VarSet,pos,0][VarSet,num,[MemWriteString,SplashMemTemp,"You appear to be trying to use your serial number as an activation code.\n",0]][VarAdd,pos,num-1][VarSet,num,[MemWriteString,SplashMemTemp,"That will not work.\n\n",pos]][VarAdd,pos,num-1][VarSet,num,[MemWriteString,SplashMemTemp,"Please use 'Web Activation' or 'Phone Activation' to use your serial number\n",pos]][VarAdd,pos,num-1][VarSet,num,[MemWriteString,SplashMemTemp,"and generate an activation code.\n\n",pos]][VarAdd,pos,num-1][NoteIButton,MemBlock:SplashMemTemp,,,1,10,2,580,140,,,0][NoteIButton,"\Cff9923OK",,0,0,10,140,590,36][Note,"",,0,,,,600,180,0][MemDelete,SplashMemTemp][VarSet,tmp,""]][If,[StrLength,tmp]>0,[VarSet,tmp,[StrUpper,tmp]][RoutineCall,MakeCryptable,tmp,tmp][RoutineCall,MakePrintable,tmp,tmp][MemDelete,SplashMemTemp][MemCreate,SplashMemTemp,[StrLength,tmp]][MemWriteString,SplashMemTemp,tmp][MemSaveToFile,SplashMemTemp,"ZBRUSH_ZActivation.zsc",1][MemDelete,SplashMemTemp][RoutineCall,RetryActivationFile,theMode][VarSet,cmpResult,0][If,(theMode==0),[RoutineCall,CmpCodePart,cmpResult,gCodeActivation,gCodePartLState,"A"][If,(cmpResult==0),[RoutineCall,CmpCodePart,cmpResult,gCodeActivation,gCodePartLType,"D"][If,(cmpResult!=0),[Note,"\Cff9923License was sucessfully activated!\n\CffffffLaunching ZBrush...",,2][RoutineCall,ValidateZBrushLicenseFull],[Note,"\Cff9923This code is a trial activation code!\n\CffffffTo activate ZBrush, you need a valid ZBrush license code."][VarSet,gActivationMessage,"\Cff9923ZBrush Activation:  "]],[VarSet,gActivationMessage,"\Cff9923License activation failed!  \Cffffff"]],[RoutineCall,CmpCodePart,cmpResult,gCodeInternal1,gCodePartLState,"A"][If,(cmpResult==0),[RoutineCall,CmpCodePart,cmpResult,gCodeActivation,gCodePartLType,"D"][If,(cmpResult!=0),[Note,"\Cff9923License was sucessfully activated!\n\CffffffLaunching ZBrush...",,2][RoutineCall,ValidateZBrushLicense],[If,gEnableTrialCode,[Note,"\Cff9923Trial was sucessfully activated!\n\CffffffLaunching ZBrush...",,2][RoutineCall,ValidateZBrushLicense],[VarSet,gActivationMessage,"\Cff9923License activation failed!  \Cffffff"]]],[VarSet,gActivationMessage,"\Cff9923License activation failed!  \Cffffff"]]]],theMode][RoutineDef,ProcessActivationCode,[If,activationFileFlag<0,[VarSet,proceedButton,-1][VarSet,enterCodeButton,-1][NoteIButton,"    \Cff9923OK    "],[If,activationFileFlag>0,[NoteIButton,"\Cff9923Proceed \Cc0c0c0Activation file"][VarSet,proceedButton,1][VarSet,enterCodeButton,2],[VarSet,proceedButton,-1][VarSet,enterCodeButton,1]][NoteIButton,"\Cff9923Enter \Cc0c0c0Activation Code"][NoteIButton,"\Cff9923Cancel \Cc0c0c0Activation"]][MemDelete,SplashMemTemp][MemCreate,SplashMemTemp,4096][VarSet,SplashMemSize,0][RoutineCall,AppendToSplashMemTemp,SplashMemSize,waitStr1][RoutineCall,AppendToSplashMemTemp,SplashMemSize,waitStr2][RoutineCall,AppendToSplashMemTemp,SplashMemSize,waitStr3][RoutineCall,AppendToSplashMemTemp,SplashMemSize,waitStr4][RoutineCall,AppendToSplashMemTemp,SplashMemSize,waitStr][MemWrite,SplashMemTemp,0,1,SplashMemSize][VarInc,SplashMemSize][MemResize,SplashMemTemp,SplashMemSize][NoteIButton,MemBlock:SplashMemTemp,,,1,10,2,380,230,,,0][VarSet,result,[Note,,,0,3027773,48,380,,1,1,0,0,]][MemDelete,SplashMemTemp][If,result==enterCodeButton,[RoutineCall,AskActivationCode,theMode]][If,result==proceedButton,[RoutineCall,RetryActivationFile,theMode][VarSet,cmpResult,0][If,(theMode==0),[RoutineCall,CmpCodePart,cmpResult,gCodeActivation,gCodePartLState,"A"][If,(cmpResult==0),[RoutineCall,CmpCodePart,cmpResult,gCodeActivation,gCodePartLType,"D"][If,(cmpResult!=0),[Note,"\Cff9923License was sucessfully activated!\n\CffffffLaunching ZBrush...",,2][RoutineCall,ValidateZBrushLicense],[Note,"\Cff9923This code is a trial activation code!\n\CffffffTo activate ZBrush, you need a valid ZBrush license code."][VarSet,gActivationMessage,"\Cff9923ZBrush Activation:  "]],[VarSet,gActivationMessage,"\Cff9923License activation failed!  \Cffffff"]],[RoutineCall,CmpCodePart,cmpResult,gCodeInternal1,gCodePartLState,"A"][If,(cmpResult==0),[Note,"\Cff9923License was sucessfully activated!\n\CffffffLaunching ZBrush...",,2][RoutineCall,ValidateZBrushLicense],[VarSet,gActivationMessage,"\Cff9923License activation failed!  \Cffffff"]]]],theMode,activationFileFlag,waitStr,waitStr1,waitStr2,waitStr3,waitStr4][RoutineDef,VerifyUserWantNewRequestCode,,result][RoutineDef,DoZBrushRegistration,[VarDef,enableTrialVersion,gEnableTrialVersion][If,theMode==0,[VarSet,enableTrialVersion,0]][VarSet,requestFull,1-enableTrialVersion][Loop,100000,[MemDelete,SplashMemTemp1][MemDelete,SplashMemTemp2][MemCreateFromFile,SplashMemTemp1,"ZDATA_ZPlugs64/SplashData/SplashText1.txt"][If,[FileExists,"ZDATA_ZPlugs64/SplashData/SplashText2.txt"],[MemCreateFromFile,SplashMemTemp2,"ZDATA_ZPlugs64/SplashData/SplashText2.txt"],[MemCreateFromFile,SplashMemTemp2,"ZDATA_ZPlugs64/SplashData/SplashText1.txt"]][VarSet,msz1,[MemGetSize,SplashMemTemp1]][VarSet,msz2,[MemGetSize,SplashMemTemp2]][MemResize,SplashMemTemp1,(msz1+8),1][MemResize,SplashMemTemp2,(msz2+8),1][MemWrite,SplashMemTemp1,0,1,msz1][MemWrite,SplashMemTemp1,0,1,msz2][IFreeze,[Loop,10000,[If,enableTrialVersion==1,[NoteIButton,,,0,1,1,1,800,550,,,0,0,0][NoteIButton,,SPLASH,0,1,1,1,,,0,0xa0a0a0,0,0,1][NoteIButton,,IMAGE_ZLogoForNotes.psd,0,1,355,1,,,0,0xffffff,0,0,1][NoteIButton,,IMAGE_ZLogoForNotes.psd,0,1,355,1,,,0,0xffffff,0,0,1][If,requestFull,[NoteIButton,MemBlock:SplashMemTemp1,,0,1,30,85,740,360,0xc0c0c0,0xf0f0f0,0,1,1][NoteIButton,"\Cff9923Enter \Cc0c0c0Activation Code",,0,0,620,466,180,28,0x202020,,.5,.9,][NoteIButton,"\Cc0c0c0Exit",,0,0,1,466,180,28,0x202020,,.5,.9,][NoteIButton,"\Cff9923Web \Cc0c0c0Activation \C808080(Best)",,0,0,207,466,180,28,0x808080,,.5,.9,][NoteIButton,"\Cff9923Phone \Cc0c0c0Activation",,0,0,414,466,180,28,0x202020,,.5,.9,],[NoteIButton,MemBlock:SplashMemTemp2,,0,1,30,85,740,360,0xc0c0c0,0xf0f0f0,0,1,1][NoteIButton,"\Cff9923Buy \Cc0c0c0ZBrush online",,0,0,620,466,180,28,0x202020,,.5,.9,][NoteIButton,"\Cc0c0c0Exit",,0,0,1,466,180,28,0x202020,,.5,.9,][NoteIButton,"\Cff9923Web \Cc0c0c0Activation \C808080",,0,0,320,466,180,28,0x808080,,.5,.9,][NoteIButton,"",,0,1,406,466,,,0xf0f0f0,0,0,.8,]][VarSet,licenseText1,""][VarSet,licenseText2,""][If,requestFull==0,[NoteIButton,"\Cff992330-days Trial \Cc0c0c0version",,0,1,99,427,252,26,0x393939,0,,,][NoteIButton,"\Cff9923Full \Cc0c0c0version",,0,0,350,431,250,20,0x272727,0,,,][VarSet,licenseText1,"Activate your 30-days ZBrush trial version by \Cc0c0c0web\Cffffff."][VarSet,licenseText2,"To activate a full ZBrush version, please click on '\Cff9923Full \Cc0c0c0version\Cffffff' button."],[NoteIButton,"\Cff9923Trial \Cc0c0c0version",,0,0,100,431,250,20,0x272727,0,,,][NoteIButton,"\Cff9923Full \Cc0c0c0version",,0,1,349,427,252,26,0x393939,0,,,][VarSet,licenseText1,"Activate your full ZBrush version by \Cc0c0c0web\Cffffff or \Cc0c0c0phone\Cffffff."][VarSet,licenseText2,"To try ZBrush for free during 30 days, please click on '\Cff992330-days Trial \Cc0c0c0version\Cffffff' button."]][NoteIButton,"",,0,1,1,511,798,3,0x808080,0,,,][NoteIButton,[StrMerge,gActivationMessage,"\Cffffff",licenseText1],,0,1,10,514,,,0x080808,,0,.8,][NoteIButton,[StrMerge,"\Cffffff",licenseText2],,0,1,10,536,,,0x080808,,0,.8,],[NoteIButton,,,0,1,1,1,800,540,,,0,0,0][NoteIButton,,SPLASH,0,1,1,1,,,0,0xa0a0a0,0,0,1][NoteIButton,,IMAGE_ZLogoForNotes.psd,0,1,355,1,,,0,0xffffff,0,0,1][NoteIButton,,IMAGE_ZLogoForNotes.psd,0,1,355,1,,,0,0xffffff,0,0,1][NoteIButton,MemBlock:SplashMemTemp1,,0,1,30,85,740,360,0xc0c0c0,0xf0f0f0,0,1,1][NoteIButton,"\Cff9923Enter \Cc0c0c0Activation Code",,0,0,620,466,180,28,0x202020,,.5,.9,][If,theMode==0,[NoteIButton,"\Cff9923Continue\Cc0c0c0 Trial",,0,0,1,461,180,28,0x202020,,.5,.9,][NoteIButton,"\Cff9923Web \Cc0c0c0Activation \C808080(Best)",,0,0,207,466,180,28,0x808080,,.5,.9,][NoteIButton,"\Cff9923Phone \Cc0c0c0Activation",,0,0,414,466,180,28,0x202020,,.5,.9,],[NoteIButton,"\Cc0c0c0Exit",,0,0,1,466,180,28,0x202020,,.5,.9,][NoteIButton,"\Cff9923Web \Cc0c0c0Activation \C808080(Best)",,0,0,207,466,180,28,0x808080,,.5,.9,][NoteIButton,"\Cff9923Phone \Cc0c0c0Activation",,0,0,414,466,180,28,0x202020,,.5,.9,]][VarSet,licenseText1,"Activate your full ZBrush version by \Cc0c0c0web\Cffffff or \Cc0c0c0phone\Cffffff."][NoteIButton,"",,0,1,1,511,798,3,0x808080,0,,,][NoteIButton,[StrMerge,gActivationMessage,"\Cffffff",licenseText1],,0,1,10,524,,,0x080808,,0,.8,]][VarSet,result,[Note,,,,0x404040,,,,,,,,]][VarSet,str1,""][VarSet,str2,""][VarSet,str3,""][VarSet,str4,""][If,enableTrialVersion==1,[If,(result==10),[VarSet,requestFull,0],[If,(result==11),[VarSet,requestFull,1],[LoopExit]]],[LoopExit]]]][If,(result==6)||(result<=0),[If,(enableTrialVersion==0)||requestFull,[RoutineCall,AskActivationCode,theMode],[VarSet,requestFull,1][RoutineCall,GoZBrushWebstore]]][If,result==7,[If,theMode==0,[LoopExit],[IPress,Close][Exit]]][If,result==8,[RoutineCall,VerifyUserWantNewRequestCode,result][If,result==0,,[RoutineCall,ShowLicenseAgreement][RoutineCall,CreateRequestFile][If,requestFull,[RoutineCall,doWebActivationRequest][VarSet,str1,"\Cff9923Activation requested!\Cc0c0c0\n"][VarSet,str2,"After completing the web form, you will be given an activation code.  Please copy it from the web page to complete your activation immediately.\n\n"][VarSet,str3,"You will also receive a copy of this code by email if you would prefer to complete your activation later.  Each activation code can be accepted only by the computer used to create it, and may only be used once.\n"][RoutineCall,ProcessActivationCode,theMode,0,"",str1,str2,str3,str4],[RoutineCall,doWebTrialRequest][VarSet,str1,"\Cff9923Trial-activation requested!\Cc0c0c0\n"][VarSet,str2,"After completing the web form, you will be given a trial-activation code.  Please copy it from the web page to complete your trial-activation immediately.\n\n"][VarSet,str3,"You will also receive a copy of this code by email if you would prefer to complete your trial-activation later.  Each trial-activation code can be accepted only by the computer used to create it, and may only be used once.\n"][RoutineCall,ProcessActivationCode,theMode,0,"",str1,str2,str3,str4]]]][If,result==9,[RoutineCall,VerifyUserWantNewRequestCode,result][If,result==0,,[RoutineCall,ShowLicenseAgreement][RoutineCall,CreateRequestFile][VarSet,requestCode,""][RoutineCall,GetCodePart,gCodeRequest,gCodePartCryptedCode,requestCode][VarSet,os,"Windows"][If,[ZBrushInfo,6],[VarSet,os,"MacOS"]][If,requestFull,[VarSet,str1,"\Cff9923Phone activation\Cc0c0c0\n"][VarSet,str2,"Please, contact the technical support:\nToll Free - \Cff99231-888-748-5967\n\n"][VarSet,str3,[StrMerge,"Your information\n\Cc0c0c0Request Code: \Cff9923",requestCode,"\Cc0c0c0\nVersion:       \Cff9923 ZBrush ",gZBrushVersion," ",os,"\Cc0c0c0\n\n"]][VarSet,str4,[StrMerge,"You will be asked your ZBrush ",gZBrushVersion," serial number. Please have it ready before your call.\n"]][RoutineCall,ProcessActivationCode,theMode,0,"",str1,str2,str3,str4],[VarSet,str1,"\Cff9923Phone trial-activation\Cc0c0c0\n"][VarSet,str2,"Please, contact the technical support:\nToll Free - \Cff99231-888-748-5967\n\n"][VarSet,str3,[StrMerge,"Your information\n\Cc0c0c0Request Code: \Cff9923",requestCode,"\Cc0c0c0\nVersion:       \Cff9923 Trial ZBrush ",gZBrushVersion," ",os,"\Cc0c0c0\n\n"]][RoutineCall,ProcessActivationCode,theMode,01,"",str1,str2,str3,str4]]]]],theMode][RoutineDef,DateProblemDialog,[MemDelete,gSplashDialogMem][MemCreate,gSplashDialogMem,1024][VarSet,pos,1][VarDec,pos][VarAdd,pos,[MemWriteString,gSplashDialogMem,"\CFF9923A problem of date was detected on your machine,\nand your license has been deactivated!\n\n",pos]][VarDec,pos][VarAdd,pos,[MemWriteString,gSplashDialogMem,"\CaaaaaaYou might have changed your system time recently,\nand this has been detected by the licensing system.\n\n",pos]][VarDec,pos][VarAdd,pos,[MemWriteString,gSplashDialogMem,"\CFFFFFFChoose web activation again to re-activate your version.",pos]][NoteIButton,,,0,1,1,1,450,180,,,0,0,0][NoteIButton,MemBlock:gSplashDialogMem,,0,1,15,20,420,135,,0xc0c0c0,0xf0f0f0,1,1][NoteIButton,"    \CFF9923OK    "][Note,""][MemDelete,gSplashDialogMem]][RoutineDef,SplashInit,[VarSet,gNeedRebuildCodes,0][VarSet,gNeedWriteCodes,0][VarSet,cmpResult,0][VarSet,tmp,""][VarSet,lstate,""][VarSet,ltype,""][VarSet,optExpireDate,""][VarSet,optNumLicense,""][VarSet,lstateDefault,""][VarSet,cidDefault,""][VarSet,idateDefault,""][VarSet,ldateDefault,""][VarSet,sdateDefault,""][VarSet,ltypeDefault,""][VarSet,optExpireDateDefault,""][VarSet,optNumLicenseDefault,""][RoutineCall,GetDefaultCodePart,gCodePartLState,lstateDefault][RoutineCall,GetDefaultCodePart,gCodePartCId,cidDefault][RoutineCall,GetDefaultCodePart,gCodePartIDate,idateDefault][RoutineCall,GetDefaultCodePart,gCodePartLDate,ldateDefault][RoutineCall,GetDefaultCodePart,gCodePartSDate,sdateDefault][RoutineCall,GetDefaultCodePart,gCodePartLType,ltypeDefault][RoutineCall,GetDefaultCodePart,gCodePartOptExpireDate,optExpireDateDefault][RoutineCall,GetDefaultCodePart,gCodePartOptNumLicense,optNumLicenseDefault][RoutineCall,ReadCodes][If,gTestCodeP,[RoutineCall,GetCodePart,gCodeInternalP,gCodePartPDate,gPDate]][Loop,1,[VarSet,ltype,""][RoutineCall,GetCodePart,gCodePrivate,gCodePartLType,ltype][If,gTestCodeP,[If,([StrToAsc,ltype]=='D')||([StrToAsc,ltype]=='T'),[VarSet,pdate,gPDate][VarSet,cdate,gCurrentCompactDate][RoutineCall,AddCompactDate,cdate,0,0,0,2,0,0][RoutineCall,CompareCompactDates,cmpResult,pdate,cdate][If,cmpResult>=0,[RoutineCall,DateProblemDialog][RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]]][RoutineCall,CompareCompactDates,cmpResult,gPDate,gCurrentCompactDate][If,cmpResult<0,[VarSet,gPDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodeInternalP,gCodePartPDate,gCurrentCompactDate][RoutineCall,EncryptCode,gCodeInternalP][RoutineCall,WriteCodeFile,gCodeInternalP][RoutineCall,SetCodePart,gCodeInternal3,gCodePartPDate,gCurrentCompactDate][RoutineCall,EncryptCode,gCodeInternal3][RoutineCall,WriteCodeFile,gCodeInternal3]]][RoutineCall,CheckSameCodes,cmpResult][If,(cmpResult==0),[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodeInstall1,gCodePartCId,cidDefault][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodeInstall1,gCodePartCId,gComputerId][If,cmpResult!=0,[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]]][VarSet,zversion,""][RoutineCall,GetCodePart,gCodeInternalP,gCodePartVersion,zversion][VarSet,zversionOK,1][If,gIsMacOS,[If,[StrToAsc,zversion,3]!='M',[VarSet,zversionOK,0]],[If,[StrToAsc,zversion,3]!='W',[VarSet,zversionOK,0]]][VarSet,version,INT(0.2+(100*gZBrushVersion))][VarSet,tmpDiv,100][VarSet,tmpVersion,version][Loop,3,[VarSet,tmpVal,INT(tmpVersion/tmpDiv)][VarSet,tmpVersion,INT(tmpVersion-(tmpDiv*tmpVal))][VarSet,tmpDiv,INT(tmpDiv/10)][VarSet,tmpVal2,[StrToAsc,zversion,i]-'A'][If,tmpVal!=tmpVal2,[VarSet,zversionOK,0][LoopExit]],i][If,zversionOK==0,[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodeInstall2,gCodePartIDate,idateDefault][If,(cmpResult!=0),[VarSet,cmpResult2,0][VarSet,idate,""][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate][VarSet,curddate,gCurrentCompactDate][If,([StrToAsc,ltype]!='D')&&([StrToAsc,ltype]!='T'),[RoutineCall,AddCompactDate,curddate,0,0,2,0,0,0]][RoutineCall,CompareCompactDates,cmpResult2,curddate,idate][If,(cmpResult2<0),[VarSet,cmpResult,0]]][If,(cmpResult==0),[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLDate,ldateDefault][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodeInternal3,gCodePartSDate,sdateDefault]][If,(cmpResult!=0),[VarSet,ldateStr,""][VarSet,sdateStr,""][VarSet,cmpResult2,0][RoutineCall,GetCodePart,gCodeInternal1,gCodePartLDate,ldateStr][RoutineCall,GetCodePart,gCodeInternal2,gCodePartSDate,sdateStr][RoutineCall,StrCmp,cmpResult2,ldateStr,sdateStr][If,(cmpResult2!=0),[VarSet,cmpResult,0]]][If,(cmpResult!=0),[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodeInternal3,gCodePartLState,lstateDefault][If,(cmpResult==0),[RoutineCall,ReinitCodePart,gCodePartLState][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][RoutineCall,CmpCodePart,cmpResult,gCodeInstall1,gCodePartCId,cidDefault][If,(cmpResult==0),[RoutineCall,ReinitCodePart,gCodePartCId][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][RoutineCall,CmpCodePart,cmpResult,gCodeInstall2,gCodePartIDate,idateDefault][If,(cmpResult==0),[RoutineCall,ReinitCodePart,gCodePartIDate][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLDate,ldateDefault][If,(cmpResult==0),[RoutineCall,ReinitCodePart,gCodePartLDate][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][RoutineCall,CmpCodePart,cmpResult,gCodeInternal2,gCodePartSDate,sdateDefault][If,(cmpResult==0),[RoutineCall,ReinitCodePart,gCodePartSDate][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][If,(gNeedRebuildCodes==1),[LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodeInternal1,gCodePartLState,"A"][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodeInternal3,gCodePartLState,"D"]][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodeInternal3,gCodePartLState,"E"]][If,(cmpResult!=0),[VarSet,tmpStr,""][RoutineCall,GetCodePart,gCodeInternal1,gCodePartLState,tmpStr][RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLType,"P"][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLType,"T"]][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLType,"D"]][If,(cmpResult!=0),[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]][RoutineCall,CmpCodePart,cmpResult,gCodeInstall1,gCodePartCId,gComputerId][If,(cmpResult!=0),[RoutineCall,ReinitCodes][VarSet,gNeedWriteCodes,1][LoopExit]]][RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLState,"A"][If,(cmpResult==0),[RoutineCall,CmpCodePart,cmpResult,gCodeInternal3,gCodePartLType,"T"][If,(cmpResult!=0),[RoutineCall,CmpCodePart,cmpResult,gCodeInternal3,gCodePartLType,"D"]],[RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLState,"E"][If,(cmpResult==0),[RoutineCall,SetCodePart,gCodePrivate,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLState,"E"][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][VarSet,cmpResult,1]][If,(cmpResult==0),[VarSet,idate,""][VarSet,edate,""][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate][RoutineCall,GetCodePart,gCodeInternal1,gCodePartOptExpireDate,edate][RoutineCall,CompactDate,edate,edate][RoutineCall,CompareCompactDates,cmpResult,gCurrentCompactDate,idate][If,(cmpResult>=0),[RoutineCall,CompareCompactDates,cmpResult,edate,gCurrentCompactDate]][If,(cmpResult<0),[RoutineCall,SetCodePart,gCodePrivate,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLState,"E"][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1],[VarSet,idate,""][RoutineCall,GetCodePart,gCodeInstall1,gCodePartIDate,idate][VarSet,ldate,""][RoutineCall,GetCodePart,gCodePrivate,gCodePartLDate,ldate][VarSet,sdate,""][RoutineCall,GetCodePart,gCodeInternal3,gCodePartSDate,sdate][RoutineCall,TestTimeOrder,cmpResult,idate,ldate,sdate,gCurrentCompactDate][If,cmpResult==0,[RoutineCall,SetCodePart,gCodePrivate,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLState,"E"][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1],[VarSet,pzldate,""][VarSet,curdate,gCurrentCompactDate][RoutineCall,AddCompactDate,curdate,0,0,0,1,15,0][RoutineCall,PZLaunch,pzldate][RoutineCall,CompareCompactDates,cmpResult,curdate,pzldate][If,(cmpResult<0),[RoutineCall,SetCodePart,gCodePrivate,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLState,"E"][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1][RoutineCall,DateProblemDialog]]]]][RoutineCall,CmpCodePart,cmpResult,gCodeInstall1,gCodePartIDate,idateDefault][If,(cmpResult==0),[RoutineCall,SetCodePart,gCodeInstall1,gCodePartIDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodeInstall2,gCodePartIDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodePublic,gCodePartIDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodePrivate,gCodePartIDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodeInternal1,gCodePartIDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodeInternal2,gCodePartIDate,gCurrentCompactDate][RoutineCall,SetCodePart,gCodeInternal3,gCodePartIDate,gCurrentCompactDate][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][VarSet,fileName,""][RoutineCall,GetCodeFile,gCodeActivation,fileName][RoutineCall,CmpCodePart,cmpResult,gCodePrivate,gCodePartLState,"A"][If,(cmpResult!=0)&&([FileExists,fileName]!=0),[RoutineCall,ImportActivationFile]][RoutineCall,CmpCodePart,cmpResult,gCodeInternal2,gCodePartLType,"D"][If,(cmpResult==0)&&(gEnableTrialCode==0),[RoutineCall,SetCodePart,gCodePrivate,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal1,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal2,gCodePartLState,"E"][RoutineCall,SetCodePart,gCodeInternal3,gCodePartLState,"E"][RoutineCall,UpdateInternalCodeParts,"A",0,0,0,"P","W"][VarSet,gNeedRebuildCodes,1][VarSet,gNeedWriteCodes,1]][If,(gNeedRebuildCodes==1),[RoutineCall,BuildCodes]][If,(gNeedWriteCodes==1),[RoutineCall,WriteCodes]][RoutineCall,ValidateZBrushLicense]][If,gLicenseAlreadyInitialized==0,[RoutineCall,SplashInit],[VarSet,ltype,""][RoutineCall,GetCodePart,gCodePrivate,gCodePartLType,ltype][If,[StrToAsc,ltype]=='D',[RoutineCall,AddActivationMenu],[RoutineCall,AddDeactivationMenu]]]

  